<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0416.1335                               -->
<workbook original-version='18.1' source-build='2018.1.0 (20181.18.0416.1335)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Flights' inline='true' name='federated.09qnjal1wymyae107nl8108zmphe' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='flights' name='textscan.1beil180er8wua1182ze21o7o9uc'>
            <connection class='textscan' directory='/Users/ellorentesj/repostGitHub/TFM/data' filename='flights.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1beil180er8wua1182ze21o7o9uc' name='flights.csv' table='[flights#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='integer' name='Month' ordinal='1' />
            <column datatype='integer' name='DayofMonth' ordinal='2' />
            <column datatype='integer' name='DayOfWeek' ordinal='3' />
            <column datatype='date' name='FlightDate' ordinal='4' />
            <column datatype='string' name='UniqueCarrier' ordinal='5' />
            <column datatype='string' name='TailNum' ordinal='6' />
            <column datatype='integer' name='FlightNum' ordinal='7' />
            <column datatype='integer' name='OriginAirportSeqID' ordinal='8' />
            <column datatype='integer' name='OriginCityMarketID' ordinal='9' />
            <column datatype='string' name='Origin' ordinal='10' />
            <column datatype='string' name='OriginCityName' ordinal='11' />
            <column datatype='string' name='OriginState' ordinal='12' />
            <column datatype='string' name='OriginStateName' ordinal='13' />
            <column datatype='integer' name='DestAirportSeqID' ordinal='14' />
            <column datatype='integer' name='DestCityMarketID' ordinal='15' />
            <column datatype='string' name='Dest' ordinal='16' />
            <column datatype='string' name='DestCityName' ordinal='17' />
            <column datatype='string' name='DestState' ordinal='18' />
            <column datatype='string' name='DestStateName' ordinal='19' />
            <column datatype='integer' name='CRSDepTime' ordinal='20' />
            <column datatype='integer' name='DepTime' ordinal='21' />
            <column datatype='integer' name='DepDelay' ordinal='22' />
            <column datatype='integer' name='DepDelayMinutes' ordinal='23' />
            <column datatype='integer' name='DepDel15' ordinal='24' />
            <column datatype='integer' name='DepartureDelayGroups' ordinal='25' />
            <column datatype='string' name='DepTimeBlk' ordinal='26' />
            <column datatype='integer' name='TaxiOut' ordinal='27' />
            <column datatype='integer' name='WheelsOff' ordinal='28' />
            <column datatype='integer' name='WheelsOn' ordinal='29' />
            <column datatype='integer' name='TaxiIn' ordinal='30' />
            <column datatype='integer' name='CRSArrTime' ordinal='31' />
            <column datatype='integer' name='ArrTime' ordinal='32' />
            <column datatype='integer' name='ArrDelay' ordinal='33' />
            <column datatype='integer' name='ArrDelayMinutes' ordinal='34' />
            <column datatype='integer' name='ArrDel15' ordinal='35' />
            <column datatype='integer' name='ArrivalDelayGroups' ordinal='36' />
            <column datatype='string' name='ArrTimeBlk' ordinal='37' />
            <column datatype='integer' name='CRSElapsedTime' ordinal='38' />
            <column datatype='integer' name='ActualElapsedTime' ordinal='39' />
            <column datatype='integer' name='AirTime' ordinal='40' />
            <column datatype='integer' name='Flights' ordinal='41' />
            <column datatype='integer' name='Distance' ordinal='42' />
            <column datatype='integer' name='DistanceGroup' ordinal='43' />
            <column datatype='integer' name='CarrierDelay' ordinal='44' />
            <column datatype='integer' name='WeatherDelay' ordinal='45' />
            <column datatype='integer' name='NASDelay' ordinal='46' />
            <column datatype='integer' name='SecurityDelay' ordinal='47' />
            <column datatype='integer' name='LateAircraftDelay' ordinal='48' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DayofMonth</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DayofMonth]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DayofMonth</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DayOfWeek</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DayOfWeek]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DayOfWeek</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FlightDate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[FlightDate]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>FlightDate</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UniqueCarrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UniqueCarrier]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>UniqueCarrier</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TailNum</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TailNum]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>TailNum</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FlightNum</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FlightNum]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>FlightNum</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginAirportSeqID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OriginAirportSeqID]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginAirportSeqID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginCityMarketID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OriginCityMarketID]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginCityMarketID</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Origin]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Origin</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginCityName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OriginCityName]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginCityName</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginState</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OriginState]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginState</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginStateName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OriginStateName]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginStateName</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestAirportSeqID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DestAirportSeqID]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestAirportSeqID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestCityMarketID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DestCityMarketID]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestCityMarketID</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dest</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Dest]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Dest</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestCityName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DestCityName]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestCityName</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestState</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DestState]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestState</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestStateName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DestStateName]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestStateName</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRSDepTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CRSDepTime]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>CRSDepTime</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DepTime]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepTime</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DepDelay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepDelay</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepDelayMinutes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DepDelayMinutes]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepDelayMinutes</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepDel15</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DepDel15]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepDel15</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureDelayGroups</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DepartureDelayGroups]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepartureDelayGroups</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepTimeBlk</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DepTimeBlk]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepTimeBlk</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TaxiOut</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TaxiOut]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>TaxiOut</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WheelsOff</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WheelsOff]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>WheelsOff</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WheelsOn</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WheelsOn]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>WheelsOn</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TaxiIn</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TaxiIn]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>TaxiIn</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRSArrTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CRSArrTime]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>CRSArrTime</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ArrTime]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrTime</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ArrDelay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrDelay</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrDelayMinutes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ArrDelayMinutes]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrDelayMinutes</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrDel15</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ArrDel15]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrDel15</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalDelayGroups</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ArrivalDelayGroups]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrivalDelayGroups</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrTimeBlk</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ArrTimeBlk]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrTimeBlk</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRSElapsedTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CRSElapsedTime]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>CRSElapsedTime</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActualElapsedTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ActualElapsedTime]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ActualElapsedTime</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AirTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AirTime]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>AirTime</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Flights]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Flights</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Distance]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Distance</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DistanceGroup</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DistanceGroup]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DistanceGroup</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CarrierDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CarrierDelay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>CarrierDelay</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WeatherDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WeatherDelay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>WeatherDelay</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NASDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NASDelay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>NASDelay</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SecurityDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SecurityDelay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>SecurityDelay</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LateAircraftDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LateAircraftDelay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>LateAircraftDelay</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[ArrDel15]' role='measure' type='quantitative' />
      <column datatype='integer' name='[ArrDelayMinutes]' role='measure' type='quantitative' />
      <column datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
      <column caption='PromRetDel' datatype='real' name='[Calculation_129900769867317248]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([DepDelayMinutes])/COUNT([Flights])*100' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[DayOfWeek]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[DayofMonth]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[DepDel15]' role='measure' type='quantitative' />
      <column datatype='integer' name='[DepDelayMinutes]' role='measure' type='quantitative' />
      <column datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
      <column datatype='string' name='[DestState]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Dest]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column datatype='integer' name='[Distance]' role='measure' type='quantitative' />
      <column aggregation='Count' datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Origin]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column caption='PromRetArr' datatype='real' name='[PromRetDel (copia)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([ArrDel15])/COUNT([Flights])*100' />
      </column>
      <column-instance column='[ArrDel15]' derivation='Avg' name='[avg:ArrDel15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ArrDelayMinutes]' derivation='Avg' name='[avg:ArrDelayMinutes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DepDel15]' derivation='Avg' name='[avg:DepDel15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DepDelayMinutes]' derivation='Avg' name='[avg:DepDelayMinutes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Distance]' derivation='Avg' name='[avg:Distance:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ArrDel15]' derivation='Sum' name='[sum:ArrDel15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ArrDelay]' derivation='Sum' name='[sum:ArrDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ArrDelayMinutes]' derivation='Sum' name='[sum:ArrDelayMinutes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DepDel15]' derivation='Sum' name='[sum:DepDel15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DepDelay]' derivation='Sum' name='[sum:DepDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DepDelayMinutes]' derivation='Sum' name='[sum:DepDelayMinutes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_129900769867317248]' derivation='User' name='[usr:Calculation_129900769867317248:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PromRetDel (copia)]' derivation='User' name='[usr:PromRetDel (copia):qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.295255' measure-ordering='alphabetic' measure-percentage='0.704745' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDel15:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[avg:DepDelay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDel15:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[sum:DepDelay:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[avg:DepDel15:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelayMinutes:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[sum:DepDel15:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[sum:DepDelayMinutes:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[avg:DepDelayMinutes:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[usr:Calculation_129900769867317248:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDelayMinutes:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[avg:Distance:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDelay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[med:ArrDelay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelay:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Estados Unidos&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='ArrTimeBlk-Av.ArrDelay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column datatype='integer' name='[ArrDel15]' role='measure' type='quantitative' />
            <column datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column datatype='string' name='[ArrTimeBlk]' role='dimension' type='nominal' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ArrTimeBlk]' derivation='None' name='[none:ArrTimeBlk:nk]' pivot='key' type='nominal' />
            <column-instance column='[ArrDel15]' derivation='Sum' name='[sum:ArrDel15:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDel15:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDelay:qk]</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[none:ArrTimeBlk:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Avg-Retrasos por AO'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column datatype='integer' name='[ArrDelayMinutes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[DepDelayMinutes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column-instance column='[ArrDelayMinutes]' derivation='Avg' name='[avg:ArrDelayMinutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepDelayMinutes]' derivation='Avg' name='[avg:DepDelayMinutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Origin]' derivation='None' name='[none:Origin:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDelayMinutes:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09qnjal1wymyae107nl8108zmphe].[avg:DepDelayMinutes:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[avg:DepDelayMinutes:qk]&quot;</bucket>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDelayMinutes:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <computed-sort column='[federated.09qnjal1wymyae107nl8108zmphe].[none:Origin:nk]' direction='DESC' using='[federated.09qnjal1wymyae107nl8108zmphe].[avg:DepDelayMinutes:qk]' />
          <slices>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[Multiple Values]</rows>
        <cols>([federated.09qnjal1wymyae107nl8108zmphe].[none:Origin:nk] / [federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Avg-Retrasos por CIA'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column datatype='integer' name='[ArrDel15]' role='measure' type='quantitative' />
            <column datatype='integer' name='[ArrDelayMinutes]' role='measure' type='quantitative' />
            <column caption='PromRetDel' datatype='real' name='[Calculation_129900769867317248]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([DepDelayMinutes])/COUNT([Flights])*100' />
            </column>
            <column datatype='integer' name='[DepDelayMinutes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Flights]' role='measure' type='quantitative' />
            <column caption='PromRetArr' datatype='real' name='[PromRetDel (copia)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([ArrDel15])/COUNT([Flights])*100' />
            </column>
            <column datatype='string' name='[UniqueCarrier]' role='dimension' type='nominal' />
            <column-instance column='[ArrDelayMinutes]' derivation='Avg' name='[avg:ArrDelayMinutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepDelayMinutes]' derivation='Avg' name='[avg:DepDelayMinutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UniqueCarrier]' derivation='None' name='[none:UniqueCarrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[DepDelayMinutes]' derivation='Sum' name='[sum:DepDelayMinutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_129900769867317248]' derivation='User' name='[usr:Calculation_129900769867317248:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PromRetDel (copia)]' derivation='User' name='[usr:PromRetDel (copia):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDelayMinutes:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09qnjal1wymyae107nl8108zmphe].[avg:DepDelayMinutes:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]&quot;</bucket>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[usr:Calculation_129900769867317248:qk]&quot;</bucket>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDelayMinutes:qk]&quot;</bucket>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[sum:DepDelayMinutes:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[Multiple Values]</rows>
        <cols>([federated.09qnjal1wymyae107nl8108zmphe].[none:UniqueCarrier:nk] / [federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='DayOfMonth-Av.ArrDelay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column datatype='integer' name='[ArrDel15]' role='measure' type='quantitative' />
            <column datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[DayofMonth]' role='dimension' type='ordinal' />
            <column-instance column='[ArrDel15]' derivation='Avg' name='[avg:ArrDel15:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DayofMonth]' derivation='None' name='[none:DayofMonth:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDel15:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDelay:qk]</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[none:DayofMonth:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='DayOfWeek-Av.ArrDelay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column datatype='integer' name='[ArrDel15]' role='measure' type='quantitative' />
            <column datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[DayOfWeek]' role='dimension' type='ordinal' />
            <column-instance column='[ArrDel15]' derivation='Avg' name='[avg:ArrDel15:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DayOfWeek]' derivation='None' name='[none:DayOfWeek:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDel15:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDelay:qk]</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[none:DayOfWeek:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='DepDelayMinutes-ArrDelayMinutes'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column datatype='integer' name='[ArrDelayMinutes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[DepDelayMinutes]' role='measure' type='quantitative' />
            <column-instance column='[ArrDelayMinutes]' derivation='Sum' name='[sum:ArrDelayMinutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepDelayMinutes]' derivation='Sum' name='[sum:DepDelayMinutes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelayMinutes:qk]</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[sum:DepDelayMinutes:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='DepTime-ArrDelMIn'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column datatype='integer' name='[ArrDelayMinutes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[DepTime]' role='measure' type='quantitative' />
            <column-instance column='[ArrDelayMinutes]' derivation='Sum' name='[sum:ArrDelayMinutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepTime]' derivation='Sum' name='[sum:DepTime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='mark-color' value='#69aaa5' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelayMinutes:qk]</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[sum:DepTime:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='DepTimeBlk-Av.ArrDelay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column datatype='integer' name='[ArrDel15]' role='measure' type='quantitative' />
            <column datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column datatype='string' name='[DepTimeBlk]' role='dimension' type='nominal' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepTimeBlk]' derivation='None' name='[none:DepTimeBlk:nk]' pivot='key' type='nominal' />
            <column-instance column='[ArrDel15]' derivation='Sum' name='[sum:ArrDel15:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDel15:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDelay:qk]</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[none:DepTimeBlk:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='DepTimeBlk~Distance-Av.ArrDelay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column datatype='integer' name='[ArrDel15]' role='measure' type='quantitative' />
            <column datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column datatype='string' name='[DepTimeBlk]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Distance]' role='measure' type='quantitative' />
            <column-instance column='[ArrDel15]' derivation='Avg' name='[avg:ArrDel15:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Distance]' derivation='Avg' name='[avg:Distance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepTimeBlk]' derivation='None' name='[none:DepTimeBlk:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09qnjal1wymyae107nl8108zmphe].[avg:Distance:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDel15:qk]' />
              <color column='[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDelay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDel15:qk]' />
              <color column='[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09qnjal1wymyae107nl8108zmphe].[avg:Distance:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDel15:qk]' />
              <color column='[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#b6992d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDelay:qk] + [federated.09qnjal1wymyae107nl8108zmphe].[avg:Distance:qk])</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[none:DepTimeBlk:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Distance-ArrDelay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Distance]' role='measure' type='quantitative' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Distance]' derivation='Sum' name='[sum:Distance:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDelay:qk]</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[sum:Distance:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='TailNum-Av.ArrDelay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column datatype='integer' name='[ArrDel15]' role='measure' type='quantitative' />
            <column datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column datatype='string' name='[TailNum]' role='dimension' type='nominal' />
            <column-instance column='[ArrDel15]' derivation='Avg' name='[avg:ArrDel15:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TailNum]' derivation='None' name='[none:TailNum:nk]' pivot='key' type='nominal' />
            <column-instance column='[ArrDelay]' derivation='Sum' name='[sum:ArrDelay:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.09qnjal1wymyae107nl8108zmphe].[none:TailNum:nk]' direction='DESC' using='[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelay:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDel15:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDelay:qk]</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[none:TailNum:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Vuelos-Retrasos'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column datatype='integer' name='[ArrDel15]' role='measure' type='quantitative' />
            <column datatype='integer' name='[DepDel15]' role='measure' type='quantitative' />
            <column datatype='string' name='[DestState]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Dest]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column aggregation='Count' datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dest]' derivation='None' name='[none:Dest:nk]' pivot='key' type='nominal' />
            <column-instance column='[DestState]' derivation='None' name='[none:DestState:nk]' pivot='key' type='nominal' />
            <column-instance column='[ArrDel15]' derivation='Sum' name='[sum:ArrDel15:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepDel15]' derivation='Sum' name='[sum:DepDel15:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09qnjal1wymyae107nl8108zmphe].[Longitude (generated)]' field-type='quantitative' max='35802247.418205172' min='19422902.491427038' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]' field-type='quantitative' max='11594910.629189046' min='1542634.7124103475' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]' field-type='quantitative' fold='true' max='11594910.629189046' min='1542634.7124103475' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Number of Records:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='129' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Number of Records:qk]' />
              <lod column='[federated.09qnjal1wymyae107nl8108zmphe].[none:DestState:nk]' />
              <lod column='[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDel15:qk]' />
              <geometry column='[federated.09qnjal1wymyae107nl8108zmphe].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='129' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.09qnjal1wymyae107nl8108zmphe].[sum:DepDel15:qk]' />
              <lod column='[federated.09qnjal1wymyae107nl8108zmphe].[none:Dest:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3073480129241943' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#606b76' />
                <format attr='mark-transparency' value='252' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)] + [federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)])</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Vuelos-Retrasos'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='2' param='[federated.09qnjal1wymyae107nl8108zmphe].[sum:DepDel15:qk]' type='size' />
            <card pane-specification-id='1' param='[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Flights:qk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:Dest:nk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:DestState:nk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:Origin:nk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:OriginState:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='DepTime-ArrDelMIn'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[hr:ArrTime:ok]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[hr:DepTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='DepDelayMinutes-ArrDelayMinutes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Avg-Retrasos por CIA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='0' param='[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:Carrier:nk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:UniqueCarrier:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Avg-Retrasos por AO'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='0' param='[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:Origin:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Distance-ArrDelay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:DayOfWeek:ok]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:Origin:nk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='DayOfWeek-Av.ArrDelay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:DayOfWeek:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='DayOfMonth-Av.ArrDelay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:DayofMonth:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='TailNum-Av.ArrDelay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:TailNum:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='DepTimeBlk~Distance-Av.ArrDelay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='2' param='[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:ArrTimeBlk:nk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:DepTimeBlk:nk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:Distance:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='ArrTimeBlk-Av.ArrDelay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDelay:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:ArrTimeBlk:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='DepTimeBlk-Av.ArrDelay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:DepTimeBlk:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='ArrTimeBlk-Av.ArrDelay' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg-Retrasos por AO' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg-Retrasos por CIA' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='DayOfMonth-Av.ArrDelay' width='192'>
      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
      c6q0ypP2Z3gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='DayOfWeek-Av.ArrDelay' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='DepDelayMinutes-ArrDelayMinutes' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='DepTime-ArrDelMIn' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='DepTimeBlk-Av.ArrDelay' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAQL0lEQVR4nO3dW2xb930H8O85h1eRlCiKusuSLNmWZVnORZYS13bipElaIMnSBMU6DCgG
      FEW2AX3by7a3AcNe97RLgGFYi+5lxdZhSJM2Tdq0jnO1FfluWZJtiZJISRRFineRPP89yFZN
      U7LPkUxd+P9+XmTS54/zF/X/nuvv/KkIIQSIJKXudAeIdhIDQFKz7HQHqLLoKwn8/L0PMPjs
      c2hr8EFRFAghcOGz3yGmO9Hf0456fxMArP6fXsBvf/0rNLR3QySXULevDy2NHiiKsi39VXgO
      QI9TIRnEJ1cXsTR5Hl98eQ0H+weh5BJ4+cUBzCXrEQt9hSsjN7CY0NC9z4mcVgstG4OjoQXu
      bAyj83n8+dvfh9uxPdtm7gHo8dJsuDV6Ef1H+pCBBw6LHYWCHa4qN6oVG4S3FidOn8TsVATV
      Pis8tU2YHruB6rp6OIULBxxp5PMFbNfQ3PQe4F6z7dpV0d60FI6gxu/btSebWwqAEAKqult/
      NaJH4+glqRkOgBACuLvVJ6oUhs40cpkkLl0dR31tFWYXljAwNMSzZ6oIhsax1eFCjduDdGoZ
      ifgy8gUdqiKg6zp0XS93H4nKxlAAsukEUpkEamtr0ajYYNNUqBBQFIUnwbSn8SoQSY2jl6TG
      AJDUGACSGgNAUmMASGoMAEmNASCpMQAkNQaApMYAkNQM1QIJIZDP5QEI5PJ5OJxO8DkwqgSG
      ApDPpnD+6xs4eqQL54e/xqnnX4AGsVYPRLRXGQqAZrXDXeWA3W5DfXMrLAqg66uDn+XQtJcZ
      qgbNZdOYW4jAV+uFxe6EzaKyGpQqAsuhSWocvSQ1BoCkxgCQ1BgAkhoDQFJjAKii3btPde+q
      pdB13H/dk/NbUcVZySTxz//yU3zz9BFcn4rirTdfx89+/G8QNT40OG3IaF4sT13F6df/hAGg
      ymNzuNDW5MftsTHEU3mEwnHEllOAsKOnyYcvhodx63YAbU/MMgBUebLpOBwuG7q6hqBNBbGy
      HMbA4NOA3YV4NIIz33oD3/e7Aaubd4Kp8kQTGRQM1qgZ2gPohTyCwXnU+2swMRnC4Z7uLXWQ
      qJz++p0PEVxMGFrW2PMAegGRyDKWwjPICfvq5Ljg5Li0O5k5pjH2PEA+h+hSGPUNPiRjUWQL
      gMuqcnJc2pXMfGuXoQDYnW6cfv4UIAT0u8f9fBCGKoG5q0CKApVfikcVhMcvJDUGgKTGAJDU
      GACSGgNAUmMASGoMAEmNAaBdKxJZgl7IYXxsHAUBZNNJpLIriMdiyK7kMDE+hnQ2t6V1sBya
      dqVCLot3/unfcWqwA5dn0vjB/m5cv3QeKVsDQsO/xaEz38XY52cxMR3FK2cGN70e7gFoV1JU
      BR63DbF4Fm4ljeFL4/C43VhYCKPWV42F+SDctT5ks+ktrcfw5LjXRu+gpb4GC/EsDh/q2tJK
      iR5NxZt//BY8Hg+i0WXU+bzIZrw40aBA0Q9CtViRTnhR39yypbUYmxzX5kSV3QGhAInlKPK6
      gCp0lkNT2Xx2dRrxVBbA3br+meT6C87ewpHOerTVV6+99djLoVcyScTiS3A462GzWKAqClSF
      5dBUPv/z+xu4FYwaWvYv3ziOzmbf2uuylEMPHB8AALS1twMwlzKi3Yqbb5IaA0BSYwBIarwR
      RmUkcOmrL9Bw4BhGL5zF4aefgctSwM07c8gno3DU1CMRDqCl+yg6Wxt2pIfcA1BZ2bOLuHpp
      GB+eG8HcQhQWqwPBUBAup4ZPzn2MDz78FAvhyI71j3sAKh8BzEdjiMCGrtYGzI5fAzL7ELhz
      Gzb7Efhr/ai2aFiKLu5YFxkAKh9FwenX/hTA6izN9+4ZHXuif21WESEElB28l8QAUNmcvTSJ
      c5cDhpZ94alOPHOkrcw9KsUAUNkE5pbx2dVpQ8v27Ksrc2/Wx5NgkprhAHAmOKpEhgKQyyTx
      +ecXkM+m8NFHvyt3n4i2jaFzAKvDhXqfD+M3x6GLAjIrBVg1sByaHkoXxseGLgTy+fzaazPH
      G7quF7d93OXQ2XQCOX0F7Qd60N7VDYdNW718xXJoeghVMT42VEWBxfKH4WhmBlpVVYvblqMc
      urf38L1XJrpGtLtx801SYwBIagwASY0BIKkxACQ1BoCkxgCQ1BgAkhoDQFJjAEhqhgIghEBs
      KYpUYhmTgZly94lo2xicHTqNmxNTOHq4A2M3bqC5tQXa3clx+ZwAbcRsNWihUFh7bbYatKjt
      464GFUIgFY9iIeKFXQNyOmDVVncerAaljSgmq0HvH0tmq0GL2j7ualCrowqnnjsJBUBzcwus
      FmWtHFoxszbak4bPfYzarqcw/vXvcfjpE3AU4jh/bQoH2uswcn0KB9t80O1ePN1/uKid2ZGx
      lbG02baGIqooCjRNg6ppsFr5HL1sWmoduDMdwsSdGSwtxbC4EML83CzaunuhZNMIBqaxEAqZ
      OmzZLXj8Qo8UCM1jYeY29rU1Izh5C7GUCoueQ2D8Mo6efB51jU1Ipjb4AotdjptzeqTBF/8I
      g7g3MYICRQGGTgytHXaI1pMYhPlDnt2AAaCHOntpCr/6ctzQsp1NXvzwtafL3KPHiwGgh1qI
      JnH51ryhZXV9750F8ByApMYAkNQYAJIazwEkEYssIKdWwY4UssIJh5rBhUs3MfBkLy5eGUNr
      Qw1WlCoc6tq3013dVgyAJCavXMAsWhAb/w0aj3wbQ731GPnyEwxf+BTNnb2YGLuCTCqPA3/x
      tlSHBTL9rlLL6TmMXh6GarVj6tYoLl4ehafKAafHj8jsNDra9iFVUPbktfytMFYNupLG2EQA
      zY21mJqdR19fH5OzxwyceR0DZ+5/R2Dw2SFYLBpyuTxURcGpMxoDsB7NYodFtcDtdiOdnIQQ
      AvrdcmhOjrv7jc8s4fxo0NCytR4HvjXYtfZamPj7ChRPcFsxk+OuZFNYjCwgm4nBXeMBsFqC
      yslx94bboRh+9vE1Q8t2tdTi1ROH1l6b+f4uBcUT3FbU5LjPnnim6D0+CEOVgJtvkhoDQFJj
      AEhqDABJjQEgqTEAJDUGgKTGAJDUGACSGgNAUjMcAJY+UCUyFIBcJokLFy4huRzFtetj5e4T
      0bYxODeoC16PB67qGthD4dVyaJ3l0HuFmb+ReLAsmeXQQDadQDqbRCgYQiqbQV4AFpZD7xlm
      /kbKg2XJLIdeLYfuP9YPAGhqbgbAcwKqDNx8k9QYAJIaA0BSYwBIagwASY0BIKkxACQ1BoCk
      xgCQ1BgAkpqhAOiFPGZngsik4hibuLMnvw+WaD2GaoGEXkB4MYpkMgarLpDM6XCqgtWgO0QI
      8YevKL3v3xthNejGjE2Pns8hGgnD2lCLcDSJ1h4VKgSrQbfZxXO/wVy+BlpmFinU4ECjHZ+P
      jOLYk0/iypUJvPrik/jfX3+JH/7Z94rasRp0Y+sGYGJiAqqqor29HZqmwe5047kzpyGEgBAC
      qmIuZfR4HOzpwfTwJPzeaszPJOD1NiOxFIRW/RJc2hje/cV7WIhmkSsIWDXZZvrfnHUDoOs6
      bt68iVQqhb6+vrX3FUV55O6WyicwNw+btoLlVB59PfuRzKzgYN8g/NYVBDxOvPrW21hanOfg
      N2HdACwuLmJ2dhavvPLKdveHNpBdycPf1gN/W/H7g837AQDfON2AVCYHu6sW0XgGXo9jB3q5
      95QEIJ/Pw+fzoampaSf6Qxv47No0/vG/Pje0bHOdG//6V6+VuUeVoeQsJZvNIhQKAQAPd6ji
      lQTA5XJBCIHJyUle4qSKVxKAe9dUDx06VHRpiagSlYzwxcVFZDIZJBIJFAoFaJq2E/0i2hYl
      Aairq4PP58Px48d5k4sqXskIv/f1p9PT0zvRH6Jtte4m3mKxIJFIcO4fqnglh0CJRALhcBjx
      eJyXQcvg5qULmEvboCeCEI5aDPXvx3sffoqXXnoRv3zvfRzr7caNWzP4zpuvs1Z9G5R8xg6H
      Ay0tLXC73SV7gNDMJL6+eAU6dwyb1rG/C5G5OVhUwFHlQODaCKZmQvjv//wJRq7dhM1mQ15R
      TRWD0eaV7AEsFguOHTsGv99fsrDVakU4NI3s0T7YwMlxNyMwMw1nlQWZfBaNdhucNfvxZJ+C
      Awd7MRgJI5FIoqWxAfl8vigEpj5ngeKyZJZDb2jdC/3Dw8NIp9Ml5RA2uwP7D/XBqSkQgpPj
      mpVZycNV34n++s6i93ufaAAA1Fd5AACNACLxLBprXWvLmPqcFRSXJbMcekMbFsO53e6S9z01
      PnhqfCa6Rve7OB7CP/z0E0PLet0O/Phvv1PmHtG6EfX7/YjH49vdF6Jtt24AlpeXkcvlUCgU
      trs/RNtq3UMgj8cDn8/HWiCqeCUjXAiBZDIJVVUNPXBNtJeVHALFYjFEIhF4vV4Ofqp4JQGw
      2Wzw+/2IRqMshaCKV3IIVFVVhZMnT+5EX4i2He9ikdQYAJIaA0BSMxWA/EoGc/PhcvWFaNuZ
      utN16+Z1jE0v4OVXXoYm9LWpEskYs5/V/Xfihcka9KK2JqoyIcQDbY2vVzywXt1M2wfXa7jl
      6nqK+2y8rakA5AqA12VDThewqKv3CFgNaoLJ+yr3f7Zmb8kUtTX5dEHxeo23VUramljpFiqL
      FeXB39c4UwE4fLQf6UwWLou6tmXgzTLjzH5SRZ+tyc950223OP/r/W3NBE8paWtinXigz1st
      h96IplngdrE+iCoHR/Mm3Bm9gtHpBGyJKbQe/zb21+p474OP4KmqRqygoqnagclgGN/77ht8
      tHGX4wH8JrQfOIxEOISDHY0IxzLQbA7E43F4/T4sBSZwcSqEZo8VKzvdUXok7gE2IXBnAllR
      QGApibRtBte+ugpbVR1EIY8anx8dHW0IzEdh2+mO0iMxAJvQ0d2Dju6eoveO3v05MLj68/j2
      dok2iQEw6ertefz9T84aWtZu0/Aff8PnenczBsCkgi6QyuaMLWvmBhTtCJ4Ek9QYAJIaA0BS
      YwBIaqYCsBSex8WREawUWAFKlcHUVSBvXT2mgiFYVaxNjCvb5Li6bmKysC1MUgtsoS0nxzXM
      XDl0Zhk1vsa1SXFlnBxXVU18Z9oWJqkFttCWk+MaZioANmcNOltrzDQh2tXk2nwTPUDaO8Gh
      wG3cDqWg5RaRt1bjG8eP4v33f4nensP4YuQKBp7oxVQwghdOPcuHfiqYtHuAusZWTI/fQJ3P
      i/BiGJHxi/j6RgDv/uIjvNDfinc/GMbczCzkOsWXj7QBmAsGMLcYxsdnz6GtpQ2LqTxa6qvQ
      UF+Dn388gqGhXmQzKVNXFGjvkfYQqK2jGz/6UXfReweODa39W1GAEwNP8PCnwkkZgJmFZbzz
      fxcML/93PzjDIFQoKQOQyuZwcWJup7tBu4C05wBEAANAkmMASGoMAEnNVADmg9O4cn3cVKUe
      0W5m6irQ/FwI6WQGiex+VFmwZ8uhCwWTZcmFwlp1IsuhH7baCi+H7ujsxPhUEE6rClXBni2H
      1jSTZcmatnYfgOXQD1tthZdDe7x+POX1AzA/1z3RbrT3Nt9EjxEDQFL7f/AxyhMU3JxHAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='DepTimeBlk~Distance-Av.ArrDelay' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dd3Qc133o8e/MbAUWi8WiF5IAewOLBJJiU6FMiqJESVbi8uzEjpOTOIlj
      O4mdvLwkL7GT59gvduzEOXmOT+JYclQthZbZ1Ch2imInCIoESQAkiEoAC2ALts7MfX+AYkSB
      dYHFLoD7OQd/oMzObxf3N+Xe39yrCCEEkjRBqekOQJLSSSaANKFZ0h2ANL7VnTzClUCMNatW
      ggIIQbCvh517DzBj5nRmzpmPBYGiKAghaD5/hnPNHVSUlOHIzmLatEoURUlZfIq8B5BSadeu
      t/HYVQ7VXyYehxK3nWxvCVmKidtloaknQKD9Eln2bI6dO8/cmYsxRACvdxI2NUZ2YTlrVi5J
      WXzyDCCllEWDi10h5s+ahtCyaWs8i9fjxWkxcdihzOlmfmUFfV2dWHLzKMjJJRCyk1PgJc9l
      IxKLpjQ+RQxK6U4k6QO9Pb14C7zpDuOaawkwMDBwxxsJIRBCgBAIFBQFBgYGcDqdKQxVkkae
      BUBRFFwu1x1v1O/rpLm1n2joClFsPLByOYqikJOTk7JAJSkVkuoGdXvycdisqJoNm1Ub6Zgk
      adQkdRMcDPixOSxMK5qGLuR9tDR2jVg3aDAYlJdA0pgjR4KlCU0mgDShyQSQJjSZANKEJhNA
      mtBkAkgTmkwAaUKTCSBNaEklwLViOEka45KqY2hpOoPqLCXsbydiWlg4b/ZIxyVJoyKpBCgp
      K6ez28Bu0ygsqcIwDAzDQNf1kY5PklIqiQQQdHf3kjCsuHMLycu2A6BpGhaLLIyTxhZZDCdN
      aLIXSJrQZAJIE5pMAGlCkwkgTWgyAaQJTSaANO4JITCvdnYKIRCAaQ5O6yM77qVxb8e2zfTE
      BJ9+agM73txOQFeIB/0UTp4qzwDS+Gei4bZaMEyFbIeNcChC1LSxeN4sORAmjX/nz5yiJxAm
      HtFJxIO4c9z0ByMUF+fLBJAmHpEIY/rb0ApmJHcP8NGcSeX87ZI00hJ1rxI7+C9Yqz+RZDl0
      4xkUZwkdLeeZMn0OxQWekY5RklLC6KxDv7ifrP/xEiJ0Jcly6PJy2juixBNxrnS0U5CXI8uh
      pYxn+ltI7PsBtrV/i3AVg3tS8uXQpmqjoqIMZ04+mqbJcmgpo5mRPuI7/wbHQ3+O5im/9nN5
      EyyNeyI+QOT1/4ntnl/HMmnZdb+T4wDSuCZMneiub2OduX5I4weZANI4JoRJ7MAP0fKnYZ3z
      +A3/RiaANC4JIUicfAFMHes9n7vp38kEkMYdIQR6w9sYnXXYV/0hinrzVYxkAkjjjtF+gsT7
      r+FY879RNNst/1b2W0rjiuFrJH7wX3A8+h0U++0XfpRnAGncMAe6ie38FvY1f4GaXXhH28gE
      kMYFEQsSffuvsK34Mpp36h1vJxNAGvOEHie68/9gnftxLOWL72pbmQDSmCZMg9iBH6CVVGOd
      ue6ut5ezQ0tjlhCC+PGfoWh2rIs+k9RrJJUAlxvfp7W9l4P79tLTG0hqx5I0HEKPkTj1MmbP
      eWwrvoyiJHcxk1QxXDzST0eXjjD6CEYFc2dNIxgM4nLdvttJkobNSBB/94cYZ3+J8/PbwJ58
      EWaS5dB9mMKKMEzKy0plObQ0agxfA7G938MyeTmOX9+Emp03rNeT5dDSmCCMOImTL6JfPoj9
      /q+j5U/n8IG9dAZjbFz3EPt2vUNUmFxp72HN+sfZveNNZkwup+VKH0//yhPc7KFdeciWMp7R
      d2nwqF9eg/OJH14rbwj4Q1gNUFQLds1k/873WP/Zz/P8v/8/ugcMEvEgHV0hTOBm1UDyDCBl
      LGHESdS+jN78LvbVf4xWMOO63x977wAd/hA5NieRsB97VhZtre2sfugROlua0I0oXd0hnvz4
      4zft7ZEJIKWMYRhomgZCMDgToYmqqtdmETHNwe9vxOy/THTPd7GULcZ6z6/dtKhNCIFhGEnf
      f8pLICklGmoPs+fwCdY89VnC7fXsP16HJZGgqLwcLdqHT8/D8J1nyaOfZ16V99p2wtRJ1L2K
      3rQb++qvDTnqf5SiKMPqfJEjwVJKdPf0sereObR3+gn4fVRXL6GsxEtbtw8TJ09ufIgcj4tY
      dODaNqa/lcjmryJiQZwb/+m2jX8kyDOAlBI1K1awY99hsh3NuF1eAnoMb0EBC5YtQOgDEAmS
      kz+Z6VOKEaZB4vSr6I27sK/8KlrRnFGLU94DSGkjhMDsOUfi9CYUpxdbzRdQLPZRjUFeAknp
      kwgTfv6TqHmV2O/73VFv/CDPAFIaxU88h9Cj2O79wi2f200leQaQ0sIc6EZv2IHtns+nrfGD
      LIeW0iR+4J+xLftdFM2a1jiS6gW63HgaxVFOtL8Za24pVZNKRjouaRwz2k8g9CjaDWZqG21J
      JUBp+STaOiK0XenFYzowygrl7NDSnbk6W5t93bcwDCPd0SRXDt3T049isfHAQw8SiyVkObR0
      x+K1L2GtXIXmLs2IhVWSaLEKZZMqr33ndKbvBkYaW8xwL/r5N3F+/F8zovGD7AWSRlH84L9g
      q/nNtPT334xMAGlUGJ2nEZE+tMpV6Q7lOjIBpJQbnLrkH7Gv/lrGXPp8QCaAlHKJ919Dq1iC
      4i5LdyhDyASQUkpE/ehnf4nt3s9n3NEfZAJIKRZ770eDtT4WR7pDuSGZAFLKGN31iGAH2tQH
      0h3KTckEkFJCCJPYvh9gX/VHSc/aNhoyNzJpTNPrt6GVVKN4pqQ7lFuSCSCNOBELkTj18uCg
      Vwbe+H5YUgkQC4eIRhO0tTQTCkdHOiZpjIsd+lesiz+HYstKdyi3lVT1mq+nnTj5mNEQjRej
      VM+ZgWmaGVHdJ6WX6WvA6L2IdcVXx0R7SKoa1DRNfL3duJxgJOIoioKiKDed5EiaIIQg9u4P
      caz+I1RtbFQGJ/c8QMV0SioUTHNwRq4PEiDTr/ek1EpceBOtYDqqd9qYaQtJHLIVNIsFi0XD
      ZrPJo74EgEiEiR9/DtuS3x4zjR9kL5A0QuKH/w3bos/c0dq8mUQmgDRshq8Ro6sey8xH0h3K
      XZMJIA2L4Wsk/NJnsc59Iq3TmyRrbNyqSxlH6DHix36K0XYCxyPfwjJlebpDSoqcGU66a0bH
      KWL7f4Bl5nqs1b9KJOBj89v7eeKpJ2k+e5LW3gEc6CQAxTAwFTvhYB9LV6+l2JtZg2PyEki6
      YyIWIrrr28SPP4tj/bexLvgkiqpx6ngtDy6s5NjpNoqLC+js6mP2tFLIKiLPpjJl9nx8zWfp
      7h+4/U5GmUwA6baEMEk0vEP4F19Eq6jBseF7qDkl17o7Kysr2Lz7GMHeFnbt3seUijLONF7h
      gZp5BIRGnjJAUdV0TD2W5ncylLwEGueEqfPe4aPU1Cwl1NfJhZYeyvOz6Y8oGAM9uIvKaL90
      iYVLl5FtHzpNoTnQTWz3d1Cy8rGv/CqKLfvG+xGC8ECYLFf2DVdkFEJk5PiAPAOMcxdPH4WE
      zsET5zCEwpm6Ezzz7LP093fz1o7d9HW0sHXbZo6darhuOyFM4rUvEd32dWyLfw37g//rpo0f
      Bpcqyr5J4//g95lI9gKNc85sF7X791I+YyFvntpFVuE0KjA5e7aeRQvn887OXUyeOo14JAJc
      XbTCd4HYnu+ild+D81f+Pe0T2KZSUpdAkVAAYXHQ192By1NIbk6WvATKYPFEgiutbVRUVaIA
      pqFjoqIIE1WzYOgJLFbrYNfmkZ9gXKnD8cCfoeZl9sMsIyGpBOhobSBuenBYY/T0R5g9s4pg
      MIjLNbaGwaUPCIzDP0ZvPYo681Gs8z4OGfwY40hKqhw6EYvR1ddF15VGapatkJPjjnEiHiZ6
      dguO9X+HpfzedIczqmQvkETiwluYvRexL/tiukMZdRPjPCfdlBAmidObsM57Kt2hpIVMgAnO
      6KhFdZejuorTHUpayASYwIQQJOpexbrgU+kOJW1kAkxgwt8C8RBqwfR0h5I2MgEmsMTpTVir
      P5HRM7el2sR95xOcGenD6DydESs1ppNMgAlKP/cG1tkbxnWZw52QCTABCT2G3rADy4y16Q4l
      7WQCTED6pf1ok5ai2OXApUyACWZw4Ou/sM7ZmO5QMoJMgAnGvPI+ak4Jagau15UOSSVAyN/L
      QDhOb083xohUEkmjQQhBvPZFrNWfSHcoGSOp8s1w2E8kIYj0tODwFmI3DQzDQNf1kY5PGkEi
      0I4ZDSK80+X/6qqkyqGj4Qg9gThKOESPr5fJhV5ZDj0GxM5swl79CSyWid31+WFJtFiFydPm
      MhmAWSMcjpQqIurH6DyFbfmX0h1KRpE3wRNEon47llly4OujZAJMAMKIo194C+vMdekOJePI
      BJgAjOZ30SqWoNjd6Q4l48gEGOeEMImfehnr3CfTHUpGkgkwzpldZ1GzClFzy9MdSkaSCTCO
      CSGIn3ge64JPpjuUjCUTYBwTwU6IB1GL56Y7lIwlE2AcS5z6OdZ5H5/QT3zdjvxkxikRC2Jc
      qUOrXJ3uUDKaTIBxKnHudSzTPyYHvm5DJsA4JIwE+vm3sM7akO5QMl5SCeDv7SI0EKPlUhP+
      YHikY5KGyWg5hFa6AMUhB75uJ6nyTV2P0ttvkDBNQpcv45o9Q5ZDZwohiNe+hHX1n8r/xx1I
      qhx6IBiiL6BiJPpx5xXL2aEziNFVj+rMw+qdnO5QxoRhlUObpomiytuITCGEIFH7ItbqX013
      KGPGsA7Zqmz8GUWEriAivagl1ekOZcy4YQtuamri4sWLGIYx2vFISRJGnMi2r6OV18iBr7tw
      w0/KMAzq6+upr68f7XikJIhEhNju76B6q9Cq7k93OGPKDRPA5/PR3t7O7NmzRzse6S6ZA91E
      tn8drXQhtof+gl3HGwhF43S2NLH7wHtEB/xcuNjM4QN7aWxu5cSRo5jpDjqDDLkH0HUdr9dL
      SUlJOuKR7oLRdZbY3u9hu+/3sFTUcOn0IfLcXo4cP8viWSVcamygp70J055HT3MDqz3FNF26
      SPWSGjkCetWQzyEWi9HZ2Qlk7uLGE50QgkTDDmL7/gHHx/4aS0UNAO68fI4dP0LQ38tbb2zH
      U1BErqeAYJ+PmTOmcuZMPb3dV2jv7E7zO8gcQ84A2dnZCCFobm7GNE3Z05NhhKkTP/YzzO56
      nI//4Lr5Pb3l0/mt366it7uHgpKHrlu13TRNFEVFHtOuNyQBTNNE13VmzpwpB7YyjEhEiO35
      vyhZ+Tge+dYNC900TaOwZOh6X/JAdmNDWrjP5yMajRIKhTAMA03T0hGX9BFmqIvojm9infkI
      ljkb5eXpCBmSAPn5+Xi9XmpqauRRYwQJIWhtvUxJ2SREIkpHdx85DguGaoNEBGuWmwF/LwUl
      5dit1x90jK4zgze7y/8AS/k9aXoH49OQBFBVFUVRaG1tpaioKB0xjUvhnibePXgab3En1dNL
      eH3zVhYvq+HgkZM8UDOfwydqyfUUkJdfxiMPrwIGk0Zv3Eni1Ms41v4Nam5Fmt/F+HPDQ7zF
      YiEYDHKrReSFMGm8UE9/YCBlwY0nigLCNBnw93O2rpb8yTOxCNAUlf0HDrJq5SqEafLBRy5M
      nfjR/0C/8DbOx/5BNv4UGXIGCIVC9PT0EAwGb3mdaeoJenv7CQzEWVA9T5ZD34bNM4VlS2Eg
      EKKwrJSBUAir1cKvPFmJEQ9jdeawYpmLwtJy9EiQxL7vIrIKsD38TQxVA/nZpsSQBHA4HJSV
      ldHW1oYQ4qZJoFqsuFxONGeeLIe+Q1VTp/33Nze4vBQiH73xHeLv/wLrzPVYZj8ub3ZTTBE3
      uc5pb2+npKTkljfC4kPl0MFgkJwcuebUcJiBDiKv/R72lV/FMu2hdIczIdzwkH38+HEikcht
      yyHkswAjRxg6sd3fwfGxv0YrW5zucCaMmxbDyS7Q0SOEIHHiP1FLqmXjH2U3bOUFBQUEg8HR
      jmXCMjpOYnTUYqv5QrpDmXBumACBQIB4PC4fiBkFIuonvv+fsD/4ZyiqHHUfbTe8B8jJycHr
      9cpenRQTpkFs7z9gq/kCao4sP0+HIS1cCMHAwACqqt6yG1QaPv3sFnC4sUx9IN2hTFhDLoH8
      fj+9vb14PB7Z+FPI6G0iUb8Vu1y0Lq2GJIDdbqegoID+/v5blkJIyRPxMLE9f4/9oT9HsTrT
      Hc6EdtOBsLslB8LujBCC2P7vo+VVYZ3/dLrDmfBkZ/9VhmFcK0QzTBMhTAzzvx8fF0KMyBnR
      uLQfMdCDZd5Tw34tafiG1c0jhABFYazfKZjRPp792SYmz6lmQVUBr762DXdRMcJQWDi9mPq2
      MMHLZ/n073+FbEvyXZVmsJP40Z/ifOIf5dw9GSLpBBCGzr69u8krmUz1nJkjGdOoM2MBymcs
      JNLbSaTYSeHkWTgUHROT/QePIiw51CxYyHCO/8LUie36O+wrvyyXK80gySeAMFFUC7o+OGA2
      psuhs8txKQ3gceMLCwpyrJSWVhCKmjz26Hp6uq5wvv4MrZdamF6ZXF1+4vjPUIqrEUXVY/dz
      GoeSvgkWQnCp6QK5+SV4Pe5xdxOs+3yoDidqdtawX8toP0n86E9wPP6PcrQ3wyR9BlAUhapp
      Y/vS50aErhM9VUfvM8+iuVzkPLYBx8IFaC5Xcq8XCxDb/30cj/69bPwZSHaDXmWEQoTfe4/w
      /nexz51D1vL7UCxWorW1hI8eRXO5yLrvPhzV81Gzs2/9WvEQL7/0X1Qvf4DsYz/i3St2Zq/e
      gOYoJN7XQltPGM0Is2Dp/VRVyOeu02nMFvtcbDhHflklbqeV7h4fOVl2Gpo7ybZDAjt2JY67
      oJw8960vYfQrXYT27CZWf56sFcsp/JOvXdfAraUluNatRe/qIvzeIYJvvY3mdpN137KbJkO0
      p4nJ8+6necv3qZks0AuWMHf2LA7XXmRqXg5R1cmet2ux55fJBEizMXkGMCI+Nr9xGItNYc39
      S3ll605skW5s+ZU8vOoetm5/C0eWC4fNxsaNjw3ZXghB7Nx5BnbuwhwI4Vq7Fsf8eSh3UPwn
      TBP9yhXChw4TPVWHlusma+UKHNXVqHY7AKYR49V/+z7K+6/h3fhNhGYn35NNqy/C5GIP1fPn
      8fovX6N81gIWzRt/l5FjyZg8AyiqhaC/B6fLRbdvgEiwD7vLTU9nK6dPWVnx8DoOvLUNi/f6
      Ckuh64QPHWZg/340Tx45Gx/DWl5+V0+2KaqKtbSU3KeexP3ERvSODsKHjxB6+x00bx5Z992H
      taKMxwsuYf2r57EWTr+27YcfdXnsabmKSyYYk2cAAH9/L6H+fuy5hWjoOJ0OwtE4OdlOLFYb
      QX8fdmcOdpsFIxhkYPduonWnsc+ejWvNGtRc94gW+wnTJNHeTuTQIYLbt2KfM4P8L3/t2llB
      ykxjNgHuRGjvPqJ1dZj+AFkrlpO1YjmqzZay/QlhEtvzXUzdhSFmET7wLu6nn8K5YEHK9ikN
      z7hNgPjFi/h+9GNcax7EtXYtSornOBXCJLbv+yiqFdvy3+fN7duYN7+G0EvPUjcQY8Hja7FV
      zKDn8gWiihMl2sekmQupLJc3wek0LgtSomfO0Pf8CxR+/Y/JWb9+VBp//NCPQVGxrfwy4Sv1
      ZBfP4/2z9VR95Uv0u1zom7Zwfss2Zkwqwd/Xzc69R+jq8aU0Lun2xuRN8K2EjxwltGMHBV/+
      A7Tc3JTvTwhB/OgziEQE+6o/RFFU7N4Kzm99hdy8It54cwdF1YuIeh1cfu41Yu/u4cE//RqB
      rk6CQX/K4xtp0WAv29/Zz/oNG2hrPMPl7gAOoaOrCkJPoFqyCfl91KxcQ1He8EfRU23cXAIJ
      IRjYvZvI8RPkf+n3UR2OUdln/OhPEQPd2B/4k+sqPE3TJBgI4vbkXquWFUJg9PbS//wLKM4s
      PJ/+FFpOciPMALpuYLFoIASGKdC060/oqXik9ejedygs8HA56mV+hYUtOw/z2P0LOX4xQJkl
      BIUzOPb6cyxc9+ssnDH0OeePxowQaFcrbIUQmEKgjeKUPNo3vvGNb4zEC8XjcTTNcsP5hEzT
      BJSUrU4ihCCweQt6Syv5X/ydUet5SRz/GcLXiP3hvxxS3qwoCg6H47pScUVRULOycC5diqKp
      9P30GQCskyffdUP1tV7gxZc3YTo8xPrbef6lV9GIsuvIaXZs3oS7oIhXX3yBxcuWjeh1rmJE
      2b77EHaHk3N1xyipqKK7u5vVK5dT39DItHIvvcEg2Z4SSgs912175sgBtr2xHc/kebRdqOXV
      bdupPXKE9y9c4p0tv0S3ZvPif77IqvtXjFqJfdJnANM0uHD2NIGExpJF8+loOs2Wt95l3tJV
      TC92suvwGRZXenn3XBv+1vN4S6bS3nKJX/vNL1JRnDdib0AYBv6Xf44QAs+nPnlHg1kjIV77
      Ikb7SRyP/F3SNT5mLEZg8xbiDY14PvNpbFOm3PG2beeOcbErTtjQKHRG6E04aaw7RMiwsXzR
      HBqafUwpdrH8Y2sZuo7M8AghCPgD153dPvr7GyX0/rdex5tnpz97LnrHUbILZ9JzuY6LPQMU
      Zmdz/6qlPPfSL/jSH34F2yhlwLAugRrO1VFaNReHBpfPHKSxWyUai7H24RXs3L2P1qZ6fKE4
      edk2rA4P08o9+BNZbHhkZNayFfE4/f/5HLbiYrIf28BoLYCVOLsZWg9jffgboA4/4YyODgI/
      fwUlPx/3k0+g3sGlpDB1Dh58D02x4vG68fUHWbJ0CcH+XprO11NYUUVL0wWqZs2jvLhg2DHe
      MIZ4nERbG4FfvIajuhpLaSma243qyh68//pI54MZj7D30AnsmkZ+roP+mIKWCDB5+myEYiUe
      6ObyFT8rlt2bknhvZFgJEAgEcbsH/1kBfz91tSfRNDvewgLa2jtYvmoVoUA/LQ315BRNov1S
      A/MWLyU/99bFZHfCjEbx/ehfcS5YQPaah0ZtBotE/Xb0pt03XaMrWcI0CR86RN9P/gNrZSWW
      4mJUhwPF4UB1OlFsNlSnA8XuQLHbUJ1ZKHYbit0++Du7nURnJ5biEjTX8D/fIfElEiRa24g3
      NxNvakLv7ARFwVpejtB1rKWlmAMDGP4AZiiEEQyCoYNmQbXZUHPdqDk5WPLyUD25aO5c1Fw3
      els7jkUL0zZgOCo3wYm2NkRCx1Z556f4WzGCQXz/9M+4HlmHs+be0W38DTtwrP82imXk/2FC
      CGLvv4/qykGx2xCRKGY0iohGMGNxRDSKiF79WSSCmUggojFEPIaIxYmdO4eWn4/mzkGx2dC8
      +Wj5XjRPLpb8fLS8PFS3G9XluuVnJnSdRHs78aaLxC9dQm9vB8BSVoatqgpbVSXW0lKwWG76
      OkIM3uBimAg9gREIYPr9GP1+DH8/pj+AEQgQOXIUrbAQx+xZ2OfOwT5jxm2rbUfSqCRA7zPP
      Ejl0GMfiRTgXLcQ+d27S9fV6dze+H/8buU8/hX3OnCQav8nb27cwdeFyPFqU/UfqmDKphP5g
      gqXVVdRd9DHQcZEV69bj+NDzv4kLb5F4/zWcG76HYhuZ7j1Dj7F961Zq7l+H4e/g5LlmKopy
      CSaASACnp4TulgvMq3mAyaXe27+zcBjFbgchMKNRjL4+jN5ejL5+DJ8Po79/sCGGQiAEisWK
      ludB83gw+vpA09C7e8A0sJaVY5s2FdvUqVhLS8BqHfEDjRACDANMk1hDA7EzZ4k1NIBhYps+
      bTAhpk9HdaZm6hj9StfoJIAwDDAM9K4uIsePE60/B6aJY8ECHAuqsVXc2WOG8ZZW+p55hrzP
      fhbb1Kqk4kz0XWT/mTCR3mbWrXuQF178OY7cInKcGt1d7eS4vBTlOpi38iE8jsGyiUTTHhIn
      X8D5+PdRbCN3dOq9eIILvdn4fZ3cv6KaF17ZwuqV97J950HWLJlHfVMjxZVziPkDrP3YyK0X
      IIQA00QkdMxgAN3nI7z/XRyLF+KYOxfF4UjbpGhCCEQ8TryxcUhCOObOwTZz5h1fLgnTRESi
      GMEgZjA4eGnm96N3dBCpPYXm8aRnHEAIgRkMEjtbT+TYMfSubqyVU3AuWoR9zhxU+9B6nVhD
      I/3PPY/3d38H623WLbjlvvUwz/3sRbLceThsKgOGlWyrSTBqMKeqnMbmdkS4j+lL7mfhrKno
      zQeJn3gO54a/H9HGDxAL9fDcC5vIKyhFFVGsOflkWaGzu4+Ar5NlK1Zz6th7zLn3AZYsnDVi
      +xWmzrETtSxatJhg3xWaO/0U59oJxjUSoR5yi8roaL7M/HvuwWlL71ipEAKRSBD/4Axx/jyo
      KrYpUxCGgbW8HDMYxPD7r57dBhDxODA4Y4nqcKDm5Ax+ZQ/enCs2G0Z/PzmPrk//QJi4ep0Y
      v3iR6KlTRN9/H9XlwrlwAY4FC7EUFhCprSWweSsFXxmZ0V0hBOFQCEe2C01Vrs3389Gjnt5y
      mPiRn4z4kf+jsYSCIVzuHJSr3384llQMZl04eZAr/RHIncTM0iy2vv42nS1NPPjI4+x7Zyfr
      Hl7Ny5teY+OnfoeV98wY0X0PlxACEY0SOX6cgX0HyF6xHNWdg+p2X+2Bcg12havq4JQ9ikJP
      Zyu9EcGMKWUcP3qESVNn0NTQQFVlRfoT4KOEEJiBAJFjx4nWnSbe3IxitVL0l3+ONoojzbH9
      P0BvOULW0z9GsWdOkd9IaD13kjf2HKJ0+iL8zcdxFM0k0HUJA40ppUUcP3aM3KIips+5j4dX
      LUx3uABXJyoDi6ZiGgaKpqHrCawW69Xf33wUeesvfomhCJ54YiM7t/+CroQNtxrHUzEt8xLg
      w4QQxBsbQVGwT5t2+w1GUPjlz2Gt+Q2s09aM6n5HgxCCSCRCV0cHFVOmXO2xMRGKhqknsNrt
      xKNRHE5nxkyQvG3TK3QEovzW5z7DW1s3ca7pEtYsL/cuWcamV19h2fwZnG7s4C/+8k+GjHy/
      9vMX6Y0arF62lKaGs5yqPUncVsCGh+/LtGI4k11vv0Hx1HlMK8tj3+FTPLx6Ge9Imn8AAAIT
      SURBVHsPvIfH340/qmE1gnjLpjNr2uTURdHXjJJTjGXq+FyoTlEUsrKyqLzRQcU62CScWZlV
      yCY0G0UeG9FoFG9+EYnaOuYve5Cd27Zi0Sx0RWIUeFwYDC1x3vj0rxKPRenqCfDAmnU8vP7x
      wQUeFSWzzgDGQA97DjcSDflYv+ER3ty1B0c8SF1HiKfW1PDK9n1MytEon7mAlfelbrQwuve7
      WCavwFK5MmX7kO5OT0cLrb4Q4UAAMzHAlBnzuNxwjiUrVxPq7yURDXGpo5+lNQvvqo4oo84A
      qtNNd9s57C43J0+dpa35EovvWYw32EBbWyeTSgopynUSCqVu/TKhxzA7T6Ot+uOU7UO6ewWl
      kygovf5nk8qKAfDm5wP5FJff/UBrRp0B4OpoaCSMZs/CqinX/fzDUnVtmji7BRH2Ybv3N1Ly
      +lJmGValrGmaI76IhqIoOLKyr2v8H/z8w1+pkjizGcvsx1P2+lJmSToBhKmz65236ejqH8l4
      0sroPofiKkLJyk93KNIoSX52aNPEleums72Z4gL32J4d+qp47c+xzv24XB52Akk6AVSLjSkV
      FThyvGiahqZpY3pZVRELQaAFS/k9dzVRljS2DavFlpRNGqk40i5x/k0sUx+SjX+Ckf9tBofZ
      9XPbsc56NN2hSKNMJgBgdp5G9UxGcXpu/8fSuCITAEicfhXrgk+mOwwpDf4/PvumQZzL/kgA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Distance-ArrDelay' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='TailNum-Av.ArrDelay' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAF/klEQVR4nO3dTW/bZhqF4SOK+rIkS7abduA06dRF+hW0KPzzs+pi0G2BmSSDOogLo0mn
      jmPZVmTZpEi+XRTIRhqAaEsZ1LkvwAsDXjwL3RBfSnzcCCEEAaaiux4AuEsEAGsEAGsEAGsE
      AGt/OQBuIqHO/nIARVH8HXMAd4JLIFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFj7UwGEEHgSDBshLvNHIRT61/c/aP/hR1qEWI3FTEkW69tvvqp6PqBS
      pQI4+/VnvZlcaf+Tj3VxeqqdD8ZqhUJF8ccP7waoq0bZ1YjTyyuli1udXcy0O+zoNov0yYN9
      5XmuZrNZ9ZxAJUoH8P8QAOqMu0CwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwVnItStC/f/yPPvxopNPJXON+rCRr6ovPD6qeD6hUqQAm
      b37R8cmvShvSTq+nJA8K+YK1KKi9UgGMdv+hw++CoijX+TTRuB0rCU1FUaQQAlshUFusRYE1
      DsGwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwVuqh+NvZVEcvXijqbKvTbSvKb5RkTX391aOq5wMqVSqATn+g+fVUg862Lt++1WhnqEgF
      a1FQe6UCuJ5eaTjaU6fdUtHrqduOlUQRa1FQe6xFgTUOwbBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBWei3Ki+MTjcZjvbtJNN6KlWRN
      HXz6oOr5gEqVXosyu/hNF/Nc++O+ZreplAXWoqD2yq9F2b2nRdrQxXyuUb+ltGAtCuqPtSiw
      xiEY1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ko9FJ/Mpjp6+bN6g5FCo6FuM9Nt1tSjz/5Z8XhAtUoF0OptKc9TZdlCN/O5NOipyDLW
      oqD2SgUwOz9VFvXU63Z1fX2jRqNQriZrUVB7rEWBNQ7BsEYAsEYAsEYAsLYygJOTE00mE25v
      YuOtDCBNUz158kRPnz5d9zzAWq0MYDqdqtFo6PHjx+ueB1irpQBCCNrd3VW/31dRFHcxE7A2
      SwG8e/dOJycnarVaiiLOyNhsS6/w7e1tSdLx8THvANh4Ky+BQgh6+PCh4rjUV4WA2loKYDKZ
      KM9zpWnKOwA23lIAo9FIrVZLh4eHajQadzETsDZLAcRxrE6no1evXvFBGDbeyts8i8WCFz8s
      LAUwn8+1vb2ts7Ozu5gHWKulALrdrobDoUaj0V3MA6zV0n3OKIp0cHCg4XB4F/MAa7XyDPD8
      +XM9e/Zs3bMAa7fyk67Xr1+r3++//z2ZTfXTy2O121u6zXKN+7GSrKkvPj9Y26BAFVYGsLOz
      oyRJ3v/e6naVLVKlIda421GSB4V8wVoU1N7KALIs0+XlpfI8VxRFur54K7X7+qDf1eU81bgd
      KwmsRUH9rQyg1Wppb2/v/XeBhvf2dXhvf62DAeuwMoAkSd5f2vB1CGyylc8DnJ6e6v79+zwP
      gI238hU+GAx0dHTEt0Gx8ViNCGtc48AaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAa
      AcAaAcAaAcAaAcBaqX8AkCVzPf3vse7tDTVfSFFxoyRr6usvH1U9H1CpUgE02z0NeluKm01d
      /u9Uo52holCwFgW1VyqAxe21ptdXiju7avd66rZjJVHEWhTUHo9EwhqHYFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgrtxYlvdGLl7/o
      w72BfruYa7wVK8maOvj0QdXzAZUqtxYl7iiOYr05v1KnEWt2m0pZYC0Kaq/cWpRkrvPzM+2M
      h7q4mWvUbykpWIuC+mMtCqxxCIY1AoC13wEmnApKalVaLwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Vuelos-Retrasos' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
