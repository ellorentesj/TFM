<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0416.1335                               -->
<workbook original-version='18.1' source-build='2018.1.0 (20181.18.0416.1335)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <repository-location id='FlightGraphs' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Flights' inline='true' name='federated.09qnjal1wymyae107nl8108zmphe' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='flights' name='textscan.1beil180er8wua1182ze21o7o9uc'>
            <connection class='textscan' directory='/Users/ellorentesj/repostGitHub/TFM/data' filename='flights.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1beil180er8wua1182ze21o7o9uc' name='flights.csv' table='[flights#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='integer' name='Month' ordinal='1' />
            <column datatype='integer' name='DayofMonth' ordinal='2' />
            <column datatype='integer' name='DayOfWeek' ordinal='3' />
            <column datatype='date' name='FlightDate' ordinal='4' />
            <column datatype='string' name='UniqueCarrier' ordinal='5' />
            <column datatype='string' name='TailNum' ordinal='6' />
            <column datatype='integer' name='FlightNum' ordinal='7' />
            <column datatype='integer' name='OriginAirportSeqID' ordinal='8' />
            <column datatype='integer' name='OriginCityMarketID' ordinal='9' />
            <column datatype='string' name='Origin' ordinal='10' />
            <column datatype='string' name='OriginCityName' ordinal='11' />
            <column datatype='string' name='OriginState' ordinal='12' />
            <column datatype='string' name='OriginStateName' ordinal='13' />
            <column datatype='integer' name='DestAirportSeqID' ordinal='14' />
            <column datatype='integer' name='DestCityMarketID' ordinal='15' />
            <column datatype='string' name='Dest' ordinal='16' />
            <column datatype='string' name='DestCityName' ordinal='17' />
            <column datatype='string' name='DestState' ordinal='18' />
            <column datatype='string' name='DestStateName' ordinal='19' />
            <column datatype='integer' name='CRSDepTime' ordinal='20' />
            <column datatype='integer' name='DepTime' ordinal='21' />
            <column datatype='integer' name='DepDelay' ordinal='22' />
            <column datatype='integer' name='DepDelayMinutes' ordinal='23' />
            <column datatype='integer' name='DepDel15' ordinal='24' />
            <column datatype='integer' name='DepartureDelayGroups' ordinal='25' />
            <column datatype='string' name='DepTimeBlk' ordinal='26' />
            <column datatype='integer' name='TaxiOut' ordinal='27' />
            <column datatype='integer' name='WheelsOff' ordinal='28' />
            <column datatype='integer' name='WheelsOn' ordinal='29' />
            <column datatype='integer' name='TaxiIn' ordinal='30' />
            <column datatype='integer' name='CRSArrTime' ordinal='31' />
            <column datatype='integer' name='ArrTime' ordinal='32' />
            <column datatype='integer' name='ArrDelay' ordinal='33' />
            <column datatype='integer' name='ArrDelayMinutes' ordinal='34' />
            <column datatype='integer' name='ArrDel15' ordinal='35' />
            <column datatype='integer' name='ArrivalDelayGroups' ordinal='36' />
            <column datatype='string' name='ArrTimeBlk' ordinal='37' />
            <column datatype='integer' name='CRSElapsedTime' ordinal='38' />
            <column datatype='integer' name='ActualElapsedTime' ordinal='39' />
            <column datatype='integer' name='AirTime' ordinal='40' />
            <column datatype='integer' name='Flights' ordinal='41' />
            <column datatype='integer' name='Distance' ordinal='42' />
            <column datatype='integer' name='DistanceGroup' ordinal='43' />
            <column datatype='integer' name='CarrierDelay' ordinal='44' />
            <column datatype='integer' name='WeatherDelay' ordinal='45' />
            <column datatype='integer' name='NASDelay' ordinal='46' />
            <column datatype='integer' name='SecurityDelay' ordinal='47' />
            <column datatype='integer' name='LateAircraftDelay' ordinal='48' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DayofMonth</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DayofMonth]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DayofMonth</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DayOfWeek</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DayOfWeek]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DayOfWeek</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FlightDate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[FlightDate]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>FlightDate</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UniqueCarrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UniqueCarrier]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>UniqueCarrier</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TailNum</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TailNum]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>TailNum</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FlightNum</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FlightNum]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>FlightNum</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginAirportSeqID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OriginAirportSeqID]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginAirportSeqID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginCityMarketID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OriginCityMarketID]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginCityMarketID</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Origin]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Origin</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginCityName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OriginCityName]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginCityName</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginState</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OriginState]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginState</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginStateName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OriginStateName]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>OriginStateName</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestAirportSeqID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DestAirportSeqID]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestAirportSeqID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestCityMarketID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DestCityMarketID]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestCityMarketID</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dest</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Dest]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Dest</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestCityName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DestCityName]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestCityName</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestState</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DestState]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestState</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestStateName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DestStateName]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DestStateName</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRSDepTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CRSDepTime]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>CRSDepTime</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DepTime]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepTime</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DepDelay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepDelay</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepDelayMinutes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DepDelayMinutes]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepDelayMinutes</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepDel15</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DepDel15]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepDel15</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepartureDelayGroups</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DepartureDelayGroups]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepartureDelayGroups</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepTimeBlk</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DepTimeBlk]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DepTimeBlk</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TaxiOut</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TaxiOut]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>TaxiOut</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WheelsOff</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WheelsOff]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>WheelsOff</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WheelsOn</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WheelsOn]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>WheelsOn</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TaxiIn</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TaxiIn]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>TaxiIn</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRSArrTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CRSArrTime]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>CRSArrTime</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ArrTime]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrTime</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ArrDelay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrDelay</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrDelayMinutes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ArrDelayMinutes]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrDelayMinutes</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrDel15</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ArrDel15]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrDel15</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrivalDelayGroups</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ArrivalDelayGroups]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrivalDelayGroups</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrTimeBlk</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ArrTimeBlk]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ArrTimeBlk</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRSElapsedTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CRSElapsedTime]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>CRSElapsedTime</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActualElapsedTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ActualElapsedTime]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ActualElapsedTime</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AirTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AirTime]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>AirTime</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Flights]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Flights</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Distance]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Distance</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DistanceGroup</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DistanceGroup]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DistanceGroup</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CarrierDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CarrierDelay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>CarrierDelay</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WeatherDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WeatherDelay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>WeatherDelay</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NASDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NASDelay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>NASDelay</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SecurityDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SecurityDelay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>SecurityDelay</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LateAircraftDelay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LateAircraftDelay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>LateAircraftDelay</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[ArrDel15]' role='dimension' type='ordinal' />
      <column aggregation='None' datatype='integer' name='[ArrDelay (agrupación)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[ArrDelay]' peg='0' size='5' />
      </column>
      <column aggregation='None' datatype='integer' name='[ArrDelayMinutes (agrupación)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[ArrDelayMinutes]' peg='0' size='5' />
      </column>
      <column datatype='integer' name='[ArrDelayMinutes]' role='measure' type='quantitative' />
      <column datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[ArrivalDelayGroups]' role='dimension' type='ordinal' />
      <column caption='MeanDepartureDelay' datatype='real' name='[Calculation_129900769867317248]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([DepDel15])/COUNT([Flights])*100' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[DayOfWeek]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[DayofMonth]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[DepDel15]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[DepDelayMinutes]' role='measure' type='quantitative' />
      <column datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
      <column datatype='string' name='[DestState]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;TT&quot;' value='11.0' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;TT&quot;' value='61.0' />
        </semantic-values>
      </column>
      <column datatype='string' name='[Dest]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column datatype='integer' name='[Distance]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Flights]' role='measure' type='quantitative' />
      <column aggregation='Count' datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[OriginState]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;TT&quot;' value='11.0' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;TT&quot;' value='61.0' />
        </semantic-values>
      </column>
      <column datatype='string' name='[Origin]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column caption='MeanArrivalDelay' datatype='real' name='[PromRetDel (copia)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([ArrDel15])/COUNT([Flights])*100' />
      </column>
      <column datatype='string' name='[TailNum]' role='dimension' type='nominal' />
      <column datatype='string' name='[UniqueCarrier]' role='dimension' type='nominal' />
      <column-instance column='[ArrDel15]' derivation='Avg' name='[avg:ArrDel15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ArrDelayMinutes]' derivation='Avg' name='[avg:ArrDelayMinutes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DepDel15]' derivation='Avg' name='[avg:DepDel15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DepDelayMinutes]' derivation='Avg' name='[avg:DepDelayMinutes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Distance]' derivation='Avg' name='[avg:Distance:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Flights]' derivation='Avg' name='[avg:Flights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ArrDelay]' derivation='Count' name='[cnt:ArrDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ArrDelayMinutes]' derivation='Count' name='[cnt:ArrDelayMinutes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Flights]' derivation='Count' name='[cnt:Flights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Flights]' derivation='CountD' name='[ctd:Flights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ArrDelay]' derivation='Median' name='[med:ArrDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ArrDel15]' derivation='None' name='[none:ArrDel15:ok]' pivot='key' type='ordinal' />
      <column-instance column='[TailNum]' derivation='None' name='[none:TailNum:nk]' pivot='key' type='nominal' />
      <column-instance column='[ArrDel15]' derivation='Sum' name='[sum:ArrDel15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ArrDelay]' derivation='Sum' name='[sum:ArrDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ArrDelayMinutes]' derivation='Sum' name='[sum:ArrDelayMinutes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DepDel15]' derivation='Sum' name='[sum:DepDel15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DepDelay]' derivation='Sum' name='[sum:DepDelay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DepDelayMinutes]' derivation='Sum' name='[sum:DepDelayMinutes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Flights]' derivation='Sum' name='[sum:Flights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_129900769867317248]' derivation='User' name='[usr:Calculation_129900769867317248:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PromRetDel (copia)]' derivation='User' name='[usr:PromRetDel (copia):qk]' pivot='key' type='quantitative' />
      <group caption='Acción (DayOfWeek)' hidden='true' name='[Action (DayOfWeek)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[DayOfWeek]' />
        </groupfilter>
      </group>
      <group caption='Acción (DayofMonth)' hidden='true' name='[Action (DayofMonth)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[DayofMonth]' />
        </groupfilter>
      </group>
      <group caption='Acción (Dest,OriginState)' hidden='true' name='[Action (Dest,OriginState)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Dest]' />
          <groupfilter function='level-members' level='[OriginState]' />
        </groupfilter>
      </group>
      <group caption='Acción (DestState,Dest)' hidden='true' name='[Action (DestState,Dest)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[DestState]' />
          <groupfilter function='level-members' level='[Dest]' />
        </groupfilter>
      </group>
      <group caption='Acción (Origin)' hidden='true' name='[Action (Origin)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Origin]' />
        </groupfilter>
      </group>
      <group caption='Acción (OriginState,Origin)' hidden='true' name='[Action (OriginState,Origin)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[OriginState]' />
          <groupfilter function='level-members' level='[Origin]' />
        </groupfilter>
      </group>
      <group caption='Acción (TailNum)' hidden='true' name='[Action (TailNum)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[TailNum]' />
        </groupfilter>
      </group>
      <group caption='Acción (UniqueCarrier)' hidden='true' name='[Action (UniqueCarrier)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[UniqueCarrier]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='es_ES' class='hyper' dbname='/Users/ellorentesj/Documents/Mi Repositorio de Tableau/Fuentes de datos/Flights.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='06/07/2018 12:23:54 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='845361' timestamp-start='2018-06-07 00:23:54.681' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>0</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Month</remote-alias>
              <ordinal>1</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DayofMonth</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DayofMonth]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DayofMonth</remote-alias>
              <ordinal>2</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DayOfWeek</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DayOfWeek]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DayOfWeek</remote-alias>
              <ordinal>3</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FlightDate</remote-name>
              <remote-type>133</remote-type>
              <local-name>[FlightDate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FlightDate</remote-alias>
              <ordinal>4</ordinal>
              <family>flights.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>57</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>UniqueCarrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[UniqueCarrier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>UniqueCarrier</remote-alias>
              <ordinal>5</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TailNum</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TailNum]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TailNum</remote-alias>
              <ordinal>6</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3004</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FlightNum</remote-name>
              <remote-type>20</remote-type>
              <local-name>[FlightNum]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FlightNum</remote-alias>
              <ordinal>7</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1652</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginAirportSeqID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[OriginAirportSeqID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginAirportSeqID</remote-alias>
              <ordinal>8</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>97</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginCityMarketID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[OriginCityMarketID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginCityMarketID</remote-alias>
              <ordinal>9</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>83</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Origin</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Origin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Origin</remote-alias>
              <ordinal>10</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>97</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginCityName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OriginCityName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginCityName</remote-alias>
              <ordinal>11</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginState</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OriginState]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginState</remote-alias>
              <ordinal>12</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>44</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginStateName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OriginStateName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginStateName</remote-alias>
              <ordinal>13</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>44</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestAirportSeqID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DestAirportSeqID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestAirportSeqID</remote-alias>
              <ordinal>14</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestCityMarketID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DestCityMarketID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestCityMarketID</remote-alias>
              <ordinal>15</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>86</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Dest</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Dest]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Dest</remote-alias>
              <ordinal>16</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>104</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestCityName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DestCityName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestCityName</remote-alias>
              <ordinal>17</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>100</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestState</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DestState]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestState</remote-alias>
              <ordinal>18</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>41</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestStateName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DestStateName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestStateName</remote-alias>
              <ordinal>19</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>41</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CRSDepTime</remote-name>
              <remote-type>20</remote-type>
              <local-name>[CRSDepTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CRSDepTime</remote-alias>
              <ordinal>20</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>400</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepTime</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DepTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepTime</remote-alias>
              <ordinal>21</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1075</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepDelay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DepDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepDelay</remote-alias>
              <ordinal>22</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>82</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepDelayMinutes</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DepDelayMinutes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepDelayMinutes</remote-alias>
              <ordinal>23</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>67</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepDel15</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DepDel15]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepDel15</remote-alias>
              <ordinal>24</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepartureDelayGroups</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DepartureDelayGroups]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepartureDelayGroups</remote-alias>
              <ordinal>25</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepTimeBlk</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DepTimeBlk]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepTimeBlk</remote-alias>
              <ordinal>26</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TaxiOut</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TaxiOut]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TaxiOut</remote-alias>
              <ordinal>27</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WheelsOff</remote-name>
              <remote-type>20</remote-type>
              <local-name>[WheelsOff]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WheelsOff</remote-alias>
              <ordinal>28</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1131</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WheelsOn</remote-name>
              <remote-type>20</remote-type>
              <local-name>[WheelsOn]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WheelsOn</remote-alias>
              <ordinal>29</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>868</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TaxiIn</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TaxiIn]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TaxiIn</remote-alias>
              <ordinal>30</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CRSArrTime</remote-name>
              <remote-type>20</remote-type>
              <local-name>[CRSArrTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CRSArrTime</remote-alias>
              <ordinal>31</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>541</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrTime</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ArrTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrTime</remote-alias>
              <ordinal>32</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>992</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrDelay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ArrDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrDelay</remote-alias>
              <ordinal>33</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>111</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrDelayMinutes</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ArrDelayMinutes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrDelayMinutes</remote-alias>
              <ordinal>34</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>78</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrDel15</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ArrDel15]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrDel15</remote-alias>
              <ordinal>35</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrivalDelayGroups</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ArrivalDelayGroups]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrivalDelayGroups</remote-alias>
              <ordinal>36</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrTimeBlk</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ArrTimeBlk]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrTimeBlk</remote-alias>
              <ordinal>37</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CRSElapsedTime</remote-name>
              <remote-type>20</remote-type>
              <local-name>[CRSElapsedTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CRSElapsedTime</remote-alias>
              <ordinal>38</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>168</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ActualElapsedTime</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ActualElapsedTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ActualElapsedTime</remote-alias>
              <ordinal>39</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>205</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AirTime</remote-name>
              <remote-type>20</remote-type>
              <local-name>[AirTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AirTime</remote-alias>
              <ordinal>40</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>201</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Flights</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Flights]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Flights</remote-alias>
              <ordinal>41</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Distance</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Distance]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Distance</remote-alias>
              <ordinal>42</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>479</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DistanceGroup</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DistanceGroup]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DistanceGroup</remote-alias>
              <ordinal>43</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CarrierDelay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[CarrierDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CarrierDelay</remote-alias>
              <ordinal>44</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WeatherDelay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[WeatherDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WeatherDelay</remote-alias>
              <ordinal>45</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NASDelay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NASDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NASDelay</remote-alias>
              <ordinal>46</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>34</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SecurityDelay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SecurityDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SecurityDelay</remote-alias>
              <ordinal>47</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LateAircraftDelay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[LateAircraftDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LateAircraftDelay</remote-alias>
              <ordinal>48</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.387522' measure-ordering='alphabetic' measure-percentage='0.612478' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:TailNum:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;N477HA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;N486HA&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;N479HA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;N481HA&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;N488HA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;N485HA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:TailNum:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;N486HA&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;N477HA&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;N488HA&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;N481HA&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;N485HA&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;N479HA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDel15:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[avg:DepDelay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[avg:Flights:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Flights:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[ctd:Flights:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDel15:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[sum:DepDelay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[sum:Flights:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[avg:DepDel15:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[cnt:ArrDelayMinutes:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[none:ArrDel15:ok]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelayMinutes:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[sum:DepDel15:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[sum:DepDelayMinutes:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[avg:DepDelayMinutes:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[usr:Calculation_129900769867317248:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDelayMinutes:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[avg:Distance:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDelay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[cnt:ArrDelay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[med:ArrDelay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelay:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Estados Unidos&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filtro 1 (generado)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='DayOfMonth-Flights$MeanArrDelay' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filtro 2 (generado)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='DayOfWeek-Flights$MeanArrDelay' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filtro 3 (generado)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Carrier-Flights$Delay' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filtro 4 (generado)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Flights-Dest' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filtro 5 (generado)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Flights-Origin' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filtro 6 (generado)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='ArrDelay~Origin' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filtro 7 (generado)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='TailNum-Flights$MeanArrivalDelay' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='ArrDelay~Origin'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column datatype='integer' name='[ArrDelayMinutes]' role='measure' type='quantitative' />
            <column datatype='string' name='[OriginState]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;TT&quot;' value='11.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;TT&quot;' value='61.0' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Origin]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column datatype='string' name='[TailNum]' role='dimension' type='nominal' />
            <column datatype='string' name='[UniqueCarrier]' role='dimension' type='nominal' />
            <column-instance column='[Origin]' derivation='None' name='[none:Origin:nk]' pivot='key' type='nominal' />
            <column-instance column='[ArrDelayMinutes]' derivation='Sum' name='[sum:ArrDelayMinutes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (OriginState,Origin)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[OriginState]' />
              <groupfilter function='level-members' level='[Origin]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (TailNum)]'>
            <groupfilter function='level-members' level='[TailNum]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (UniqueCarrier)]'>
            <groupfilter function='level-members' level='[UniqueCarrier]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.09qnjal1wymyae107nl8108zmphe].[none:Origin:nk]' direction='DESC' using='[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelayMinutes:qk]' />
          <slices>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[Action (OriginState,Origin)]</column>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[Action (UniqueCarrier)]</column>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[Action (TailNum)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelayMinutes:qk]</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[none:Origin:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Carrier-Delay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column aggregation='Sum' datatype='integer' name='[ArrDel15]' role='dimension' type='ordinal' />
            <column caption='MeanDepartureDelay' datatype='real' name='[Calculation_129900769867317248]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([DepDel15])/COUNT([Flights])*100' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[DepDel15]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Flights]' role='measure' type='quantitative' />
            <column caption='MeanArrivalDelay' datatype='real' name='[PromRetDel (copia)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([ArrDel15])/COUNT([Flights])*100' />
            </column>
            <column datatype='string' name='[UniqueCarrier]' role='dimension' type='nominal' />
            <column-instance column='[Flights]' derivation='Count' name='[cnt:Flights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UniqueCarrier]' derivation='None' name='[none:UniqueCarrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[Flights]' derivation='Sum' name='[sum:Flights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_129900769867317248]' derivation='User' name='[usr:Calculation_129900769867317248:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PromRetDel (copia)]' derivation='User' name='[usr:PromRetDel (copia):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09qnjal1wymyae107nl8108zmphe].[usr:Calculation_129900769867317248:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]&quot;</bucket>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[usr:Calculation_129900769867317248:qk]&quot;</bucket>
              <bucket>&quot;[federated.09qnjal1wymyae107nl8108zmphe].[sum:Flights:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]' />
              <text column='[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Flights:qk]' />
              <text column='[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]' />
              <text column='[federated.09qnjal1wymyae107nl8108zmphe].[usr:Calculation_129900769867317248:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[Multiple Values]</rows>
        <cols>([federated.09qnjal1wymyae107nl8108zmphe].[none:UniqueCarrier:nk] / [federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Carrier-Flights$Delay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column aggregation='Sum' datatype='integer' name='[ArrDel15]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Flights]' role='measure' type='quantitative' />
            <column datatype='string' name='[OriginState]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;TT&quot;' value='11.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;TT&quot;' value='61.0' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Origin]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column caption='MeanArrivalDelay' datatype='real' name='[PromRetDel (copia)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([ArrDel15])/COUNT([Flights])*100' />
            </column>
            <column datatype='string' name='[TailNum]' role='dimension' type='nominal' />
            <column datatype='string' name='[UniqueCarrier]' role='dimension' type='nominal' />
            <column-instance column='[UniqueCarrier]' derivation='None' name='[none:UniqueCarrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[Flights]' derivation='Sum' name='[sum:Flights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PromRetDel (copia)]' derivation='User' name='[usr:PromRetDel (copia):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (OriginState,Origin)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[OriginState]' />
              <groupfilter function='level-members' level='[Origin]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (TailNum)]'>
            <groupfilter function='level-members' level='[TailNum]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.09qnjal1wymyae107nl8108zmphe].[none:UniqueCarrier:nk]' direction='DESC' using='[federated.09qnjal1wymyae107nl8108zmphe].[sum:Flights:qk]' />
          <slices>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[Action (OriginState,Origin)]</column>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[Action (TailNum)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.09qnjal1wymyae107nl8108zmphe].[none:UniqueCarrier:nk]' value='39' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09qnjal1wymyae107nl8108zmphe].[sum:Flights:qk]' />
              <text column='[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[sum:Flights:qk]</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[none:UniqueCarrier:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='DayOfMonth-Flights$MeanArrDelay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column aggregation='Sum' datatype='integer' name='[ArrDel15]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[DayOfWeek]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[DayofMonth]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Dest]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column datatype='integer' name='[Flights]' role='measure' type='quantitative' />
            <column datatype='string' name='[OriginState]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;TT&quot;' value='11.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;TT&quot;' value='61.0' />
              </semantic-values>
            </column>
            <column caption='MeanArrivalDelay' datatype='real' name='[PromRetDel (copia)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([ArrDel15])/COUNT([Flights])*100' />
            </column>
            <column-instance column='[Flights]' derivation='Count' name='[cnt:Flights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DayofMonth]' derivation='None' name='[none:DayofMonth:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Flights]' derivation='Sum' name='[sum:Flights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PromRetDel (copia)]' derivation='User' name='[usr:PromRetDel (copia):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (DayOfWeek)]'>
            <groupfilter function='level-members' level='[DayOfWeek]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (Dest,OriginState)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Dest]' />
              <groupfilter function='level-members' level='[OriginState]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[Action (Dest,OriginState)]</column>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[Action (DayOfWeek)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Flights:qk]' />
              <text column='[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='687' />
                <format attr='maxheight' value='687' />
                <format attr='minwidth' value='620' />
                <format attr='maxwidth' value='620' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[sum:Flights:qk]</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[none:DayofMonth:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='DayOfWeek-Flights$MeanArrDelay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column aggregation='Sum' datatype='integer' name='[ArrDel15]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[DayOfWeek]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[DayofMonth]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Dest]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column datatype='integer' name='[Flights]' role='measure' type='quantitative' />
            <column datatype='string' name='[OriginState]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;TT&quot;' value='11.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;TT&quot;' value='61.0' />
              </semantic-values>
            </column>
            <column caption='MeanArrivalDelay' datatype='real' name='[PromRetDel (copia)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([ArrDel15])/COUNT([Flights])*100' />
            </column>
            <column-instance column='[Flights]' derivation='Count' name='[cnt:Flights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DayOfWeek]' derivation='None' name='[none:DayOfWeek:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Flights]' derivation='Sum' name='[sum:Flights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PromRetDel (copia)]' derivation='User' name='[usr:PromRetDel (copia):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (DayofMonth)]'>
            <groupfilter function='level-members' level='[DayofMonth]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (Dest,OriginState)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Dest]' />
              <groupfilter function='level-members' level='[OriginState]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[Action (Dest,OriginState)]</column>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[Action (DayofMonth)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Flights:qk]' />
              <text column='[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[sum:Flights:qk]</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[none:DayOfWeek:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='DepDelayMinutes-ArrDelayMinutes'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column datatype='integer' name='[ArrDelayMinutes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[DepDelayMinutes]' role='measure' type='quantitative' />
            <column-instance column='[ArrDelayMinutes]' derivation='Sum' name='[sum:ArrDelayMinutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepDelayMinutes]' derivation='Sum' name='[sum:DepDelayMinutes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelayMinutes:qk]' palette='brown_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelayMinutes:qk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelayMinutes:qk]</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[sum:DepDelayMinutes:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='DepTime-ArrDelMIn'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[DepTime]' role='measure' type='quantitative' />
            <column-instance column='[ArrDelay]' derivation='Sum' name='[sum:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepTime]' derivation='Sum' name='[sum:DepTime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelay:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelay:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='mark-color' value='#69aaa5' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelay:qk]</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[sum:DepTime:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='DepTimeBlk~Distance-Av.ArrDelay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column aggregation='Sum' datatype='integer' name='[ArrDel15]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column datatype='string' name='[DepTimeBlk]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Distance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Flights]' role='measure' type='quantitative' />
            <column caption='MeanArrivalDelay' datatype='real' name='[PromRetDel (copia)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([ArrDel15])/COUNT([Flights])*100' />
            </column>
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Distance]' derivation='Avg' name='[avg:Distance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DepTimeBlk]' derivation='None' name='[none:DepTimeBlk:nk]' pivot='key' type='nominal' />
            <column-instance column='[PromRetDel (copia)]' derivation='User' name='[usr:PromRetDel (copia):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09qnjal1wymyae107nl8108zmphe].[avg:Distance:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]' />
              <color column='[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDelay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]' />
              <color column='[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09qnjal1wymyae107nl8108zmphe].[avg:Distance:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]' />
              <color column='[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#b6992d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDelay:qk] + [federated.09qnjal1wymyae107nl8108zmphe].[avg:Distance:qk])</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[none:DepTimeBlk:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Distance'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column datatype='integer' name='[Distance]' role='measure' type='quantitative' />
            <column-instance column='[Distance]' derivation='Sum' name='[sum:Distance:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.09qnjal1wymyae107nl8108zmphe].[sum:Distance:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.09qnjal1wymyae107nl8108zmphe].[sum:Distance:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[sum:Distance:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Distance-ArrDelay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Distance]' role='measure' type='quantitative' />
            <column-instance column='[ArrDelay]' derivation='Sum' name='[sum:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Distance]' derivation='Sum' name='[sum:Distance:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelay:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelay:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.53773480653762817' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelay:qk]</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[sum:Distance:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Flights-Dest'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column aggregation='Sum' datatype='integer' name='[ArrDel15]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[DayOfWeek]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[DayofMonth]' role='dimension' type='ordinal' />
            <column datatype='string' name='[DestState]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;TT&quot;' value='11.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;TT&quot;' value='61.0' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Dest]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column datatype='integer' name='[Flights]' role='measure' type='quantitative' />
            <column datatype='string' name='[OriginState]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;TT&quot;' value='11.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;TT&quot;' value='61.0' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Origin]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column caption='MeanArrivalDelay' datatype='real' name='[PromRetDel (copia)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([ArrDel15])/COUNT([Flights])*100' />
            </column>
            <column datatype='string' name='[TailNum]' role='dimension' type='nominal' />
            <column datatype='string' name='[UniqueCarrier]' role='dimension' type='nominal' />
            <column-instance column='[Flights]' derivation='Count' name='[cnt:Flights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dest]' derivation='None' name='[none:Dest:nk]' pivot='key' type='nominal' />
            <column-instance column='[DestState]' derivation='None' name='[none:DestState:nk]' pivot='key' type='nominal' />
            <column-instance column='[PromRetDel (copia)]' derivation='User' name='[usr:PromRetDel (copia):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (DayOfWeek)]'>
            <groupfilter function='member' level='[DayOfWeek]' member='6' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (DayofMonth)]'>
            <groupfilter function='member' level='[DayofMonth]' member='8' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (Origin)]'>
            <groupfilter function='level-members' level='[Origin]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (OriginState,Origin)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[OriginState]' />
              <groupfilter function='level-members' level='[Origin]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (TailNum)]'>
            <groupfilter function='level-members' level='[TailNum]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (UniqueCarrier)]'>
            <groupfilter function='level-members' level='[UniqueCarrier]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[Action (OriginState,Origin)]</column>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[Action (Origin)]</column>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[Action (DayOfWeek)]</column>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[Action (DayofMonth)]</column>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[Action (UniqueCarrier)]</column>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[Action (TailNum)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09qnjal1wymyae107nl8108zmphe].[Longitude (generated)]' field-type='quantitative' max='38391840.51149077' min='20628325.714182548' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]' field-type='quantitative' max='7112050.5374397784' min='141765.97411753482' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]' field-type='quantitative' fold='true' max='7112050.5374397784' min='141765.97411753482' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Flights:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <tooltip column='[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='129' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Flights:qk]' />
              <lod column='[federated.09qnjal1wymyae107nl8108zmphe].[none:DestState:nk]' />
              <tooltip column='[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]' />
              <geometry column='[federated.09qnjal1wymyae107nl8108zmphe].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='129' />
                <format attr='mark-color' value='#59a14f' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Flights:qk]' />
              <lod column='[federated.09qnjal1wymyae107nl8108zmphe].[none:Dest:nk]' />
              <tooltip column='[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3073480129241943' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#606b76' />
                <format attr='mark-transparency' value='252' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)] + [federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)])</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Flights-Origin'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column aggregation='Sum' datatype='integer' name='[ArrDel15]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Flights]' role='measure' type='quantitative' />
            <column datatype='string' name='[OriginState]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;TT&quot;' value='11.0' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;TT&quot;' value='61.0' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Origin]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
            <column caption='MeanArrivalDelay' datatype='real' name='[PromRetDel (copia)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([ArrDel15])/COUNT([Flights])*100' />
            </column>
            <column datatype='string' name='[TailNum]' role='dimension' type='nominal' />
            <column datatype='string' name='[UniqueCarrier]' role='dimension' type='nominal' />
            <column-instance column='[Flights]' derivation='Count' name='[cnt:Flights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Origin]' derivation='None' name='[none:Origin:nk]' pivot='key' type='nominal' />
            <column-instance column='[OriginState]' derivation='None' name='[none:OriginState:nk]' pivot='key' type='nominal' />
            <column-instance column='[PromRetDel (copia)]' derivation='User' name='[usr:PromRetDel (copia):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (Origin)]'>
            <groupfilter function='level-members' level='[Origin]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (TailNum)]'>
            <groupfilter function='level-members' level='[TailNum]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (UniqueCarrier)]'>
            <groupfilter function='level-members' level='[UniqueCarrier]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[Action (Origin)]</column>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[Action (UniqueCarrier)]</column>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[Action (TailNum)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09qnjal1wymyae107nl8108zmphe].[Longitude (generated)]' field-type='quantitative' max='36348846.103670344' min='18519418.449971359' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]' field-type='quantitative' max='6919333.857264068' min='3640169.2518240511' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]' field-type='quantitative' fold='true' max='6919333.857264068' min='3640169.2518240511' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Flights:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <tooltip column='[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='129' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Flights:qk]' />
              <lod column='[federated.09qnjal1wymyae107nl8108zmphe].[none:OriginState:nk]' />
              <tooltip column='[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]' />
              <geometry column='[federated.09qnjal1wymyae107nl8108zmphe].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='129' />
                <format attr='mark-color' value='#59a14f' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Flights:qk]' />
              <lod column='[federated.09qnjal1wymyae107nl8108zmphe].[none:Origin:nk]' />
              <tooltip column='[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3073480129241943' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#606b76' />
                <format attr='mark-transparency' value='252' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)] + [federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)])</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='HistArrDel&gt;15'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column aggregation='None' datatype='integer' name='[ArrDelayMinutes (agrupación)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[ArrDelayMinutes]' peg='0' size='5' />
            </column>
            <column datatype='integer' name='[ArrDelayMinutes]' role='measure' type='quantitative' />
            <column-instance column='[ArrDelayMinutes]' derivation='Count' name='[cnt:ArrDelayMinutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ArrDelayMinutes (agrupación)]' derivation='None' name='[none:ArrDelayMinutes (agrupación):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[cnt:ArrDelayMinutes:qk]</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[none:ArrDelayMinutes (agrupación):qk]</cols>
        <show-full-range>
          <column>[federated.09qnjal1wymyae107nl8108zmphe].[ArrDelayMinutes (agrupación)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='HistArrDelay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column aggregation='None' datatype='integer' name='[ArrDelay (agrupación)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[ArrDelay]' peg='0' size='5' />
            </column>
            <column datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
            <column-instance column='[ArrDelay]' derivation='Avg' name='[avg:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ArrDelay]' derivation='Count' name='[cnt:ArrDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ArrDelay (agrupación)]' derivation='None' name='[none:ArrDelay (agrupación):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDelay:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[cnt:ArrDelay:qk]</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[none:ArrDelay (agrupación):qk]</cols>
        <show-full-range>
          <column>[federated.09qnjal1wymyae107nl8108zmphe].[ArrDelay (agrupación)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='HistArrivalDelay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column datatype='integer' name='[ArrDelayMinutes]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[ArrivalDelayGroups]' role='dimension' type='ordinal' />
            <column-instance column='[ArrDelayMinutes]' derivation='Count' name='[cnt:ArrDelayMinutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ArrDelayMinutes]' derivation='None' name='[none:ArrDelayMinutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ArrivalDelayGroups]' derivation='None' name='[none:ArrivalDelayGroups:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.09qnjal1wymyae107nl8108zmphe].[none:ArrDelayMinutes:qk]' included-values='in-range'>
            <min>15</min>
          </filter>
          <slices>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[none:ArrDelayMinutes:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[cnt:ArrDelayMinutes:qk]</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[none:ArrivalDelayGroups:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='TailNum-Flights$MeanArrivalDelay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flights' name='federated.09qnjal1wymyae107nl8108zmphe' />
          </datasources>
          <datasource-dependencies datasource='federated.09qnjal1wymyae107nl8108zmphe'>
            <column aggregation='Sum' datatype='integer' name='[ArrDel15]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Flights]' role='measure' type='quantitative' />
            <column caption='MeanArrivalDelay' datatype='real' name='[PromRetDel (copia)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([ArrDel15])/COUNT([Flights])*100' />
            </column>
            <column datatype='string' name='[TailNum]' role='dimension' type='nominal' />
            <column-instance column='[TailNum]' derivation='None' name='[none:TailNum:nk]' pivot='key' type='nominal' />
            <column-instance column='[Flights]' derivation='Sum' name='[sum:Flights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PromRetDel (copia)]' derivation='User' name='[usr:PromRetDel (copia):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[none:TailNum:nk]'>
            <groupfilter from='&quot;D942DN&quot;' function='range' level='[none:TailNum:nk]' to='&quot;N9EAMQ&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.09qnjal1wymyae107nl8108zmphe].[none:TailNum:nk]' direction='DESC' using='[federated.09qnjal1wymyae107nl8108zmphe].[sum:Flights:qk]' />
          <slices>
            <column>[federated.09qnjal1wymyae107nl8108zmphe].[none:TailNum:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]' />
              <size column='[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]' />
              <text column='[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09qnjal1wymyae107nl8108zmphe].[sum:Flights:qk]</rows>
        <cols>[federated.09qnjal1wymyae107nl8108zmphe].[none:TailNum:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98720' id='5' param='horz' type='layout-flow' w='99318' x='341' y='640'>
            <zone h='98720' id='3' type='layout-basic' w='99318' x='341' y='640'>
              <zone h='98720' id='8' name='DayOfWeek-Flights$MeanArrDelay' w='49659' x='341' y='640'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98720' id='9' name='DayOfMonth-Flights$MeanArrDelay' w='49659' x='50000' y='640'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='95520' id='5' param='horz' type='layout-flow' w='99318' x='341' y='3840'>
            <zone h='95520' id='3' type='layout-basic' w='92507' x='341' y='3840'>
              <zone h='52290' id='1' name='Flights-Dest' w='46254' x='341' y='3840'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='52290' id='8' name='Flights-Origin' w='46253' x='46595' y='3840'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43230' id='9' name='ArrDelay~Origin' w='38186' x='341' y='56130'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43230' id='10' name='Carrier-Flights$Delay' w='17837' x='38527' y='56130'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43230' id='11' name='TailNum-Flights$MeanArrivalDelay' w='36484' x='56364' y='56130'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='95520' id='4' is-fixed='true' param='vert' type='layout-flow' w='6811' x='92848' y='3840'>
              <zone h='10080' id='6' name='Flights-Dest' pane-specification-id='2' param='[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Flights:qk]' type='size' w='6811' x='92848' y='3840'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5200' id='7' name='Flights-Dest' pane-specification-id='1' param='[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Flights:qk]' type='color' w='6811' x='92848' y='13920'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11680' id='12' name='TailNum-Flights$MeanArrivalDelay' pane-specification-id='7' param='[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]' type='size' w='6811' x='92848' y='19120'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5200' id='13' name='TailNum-Flights$MeanArrivalDelay' pane-specification-id='7' param='[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]' type='color' w='6811' x='92848' y='30800'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='3200' id='14' type='text' w='99318' x='341' y='640'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontsize='20'>Exploración de los retrasos</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Historia 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='1037' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='1867' />
            <zone h='86826' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='12344'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Exploracion del peor aeronave (TailNum)' captured-sheet='Dashboard 2' id='1'>
                    <capturedDeltas>
                      <worksheet name='ArrDelay~Origin'>
                        <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (TailNum)]'>
                          <groupfilter function='member' level='[TailNum]' member='&quot;N907EV&quot;' user:ui-action-filter='[Action7]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Carrier-Flights$Delay'>
                        <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (TailNum)]'>
                          <groupfilter function='member' level='[TailNum]' member='&quot;N907EV&quot;' user:ui-action-filter='[Action7]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Flights-Dest'>
                        <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (TailNum)]'>
                          <groupfilter function='member' level='[TailNum]' member='&quot;N907EV&quot;' user:ui-action-filter='[Action7]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]' field-type='quantitative' max='9333646.420691371' min='430669.97604139359' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='1' field='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]' field-type='quantitative' fold='true' max='9333646.420691371' min='430669.97604139359' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.09qnjal1wymyae107nl8108zmphe].[Longitude (generated)]' field-type='quantitative' max='33822099.119318567' min='24454215.288524985' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='Flights-Origin'>
                        <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (TailNum)]'>
                          <groupfilter function='member' level='[TailNum]' member='&quot;N907EV&quot;' user:ui-action-filter='[Action7]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]' field-type='quantitative' max='9475540.8344344515' min='572564.29002616927' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='1' field='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]' field-type='quantitative' fold='true' max='9475540.8344344515' min='572564.29002616927' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.09qnjal1wymyae107nl8108zmphe].[Longitude (generated)]' field-type='quantitative' max='33675513.935798712' min='24307630.105005126' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='TailNum-Flights$MeanArrivalDelay'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:TailNum:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.09qnjal1wymyae107nl8108zmphe].[sum:Flights:qk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:TailNum:nk]</field>
                                  <field>[federated.09qnjal1wymyae107nl8108zmphe].[sum:Flights:qk]</field>
                                  <field>[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;N907EV&quot;</value>
                                <value>382</value>
                                <value>38.219895287958117</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Donde viaja la aerolinea menos puntual ?' captured-sheet='Dashboard 2' id='2'>
                    <capturedDeltas>
                      <worksheet name='ArrDelay~Origin'>
                        <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (TailNum)]'>
                          <groupfilter function='level-members' level='[TailNum]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (UniqueCarrier)]'>
                          <groupfilter function='member' level='[UniqueCarrier]' member='&quot;WN&quot;' user:ui-action-filter='[Action3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Carrier-Flights$Delay'>
                        <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (TailNum)]'>
                          <groupfilter function='level-members' level='[TailNum]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:UniqueCarrier:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.09qnjal1wymyae107nl8108zmphe].[sum:Flights:qk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:UniqueCarrier:nk]</field>
                                  <field>[federated.09qnjal1wymyae107nl8108zmphe].[sum:Flights:qk]</field>
                                  <field>[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;WN&quot;</value>
                                <value>168404</value>
                                <value>30.386451628227356</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Flights-Dest'>
                        <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (UniqueCarrier)]'>
                          <groupfilter function='member' level='[UniqueCarrier]' member='&quot;WN&quot;' user:ui-action-filter='[Action3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]' field-type='quantitative' max='8625083.1905285306' min='1130585.4412235685' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='1' field='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]' field-type='quantitative' fold='true' max='8625083.1905285306' min='1130585.4412235685' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.09qnjal1wymyae107nl8108zmphe].[Longitude (generated)]' field-type='quantitative' max='33053190.166550349' min='25167334.832425285' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='Flights-Origin'>
                        <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (TailNum)]'>
                          <groupfilter function='level-members' level='[TailNum]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (UniqueCarrier)]'>
                          <groupfilter function='member' level='[UniqueCarrier]' member='&quot;WN&quot;' user:ui-action-filter='[Action3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]' field-type='quantitative' max='7531149.1163190538' min='332583.26075185963' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='1' field='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]' field-type='quantitative' fold='true' max='7531149.1163190538' min='332583.26075185963' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.09qnjal1wymyae107nl8108zmphe].[Longitude (generated)]' field-type='quantitative' max='31857962.547327496' min='25226975.80898153' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='TailNum-Flights$MeanArrivalDelay'>
                        <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (UniqueCarrier)]'>
                          <groupfilter function='member' level='[UniqueCarrier]' member='&quot;WN&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Qué aeropuerto propaga más retraso?' captured-sheet='Dashboard 2' id='3'>
                    <capturedDeltas>
                      <worksheet name='ArrDelay~Origin'>
                        <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (TailNum)]'>
                          <groupfilter function='level-members' level='[TailNum]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:Origin:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelayMinutes:qk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:Origin:nk]</field>
                                  <field>[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelayMinutes:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;ORD&quot;</value>
                                <value>1019649</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Carrier-Flights$Delay'>
                        <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (Origin)]'>
                          <groupfilter function='member' level='[Origin]' member='&quot;ORD&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Flights-Dest'>
                        <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (Origin)]'>
                          <groupfilter function='member' level='[Origin]' member='&quot;ORD&quot;' user:ui-action-filter='[Action6]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]' field-type='quantitative' max='7234218.9318455085' min='16761.157057935605' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='1' field='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]' field-type='quantitative' fold='true' max='7234218.9318455085' min='16761.157057935605' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.09qnjal1wymyae107nl8108zmphe].[Longitude (generated)]' field-type='quantitative' max='32528462.03637708' min='25887741.755008608' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='Flights-Origin'>
                        <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (Origin)]'>
                          <groupfilter function='member' level='[Origin]' member='&quot;ORD&quot;' user:ui-action-filter='[Action6]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]' field-type='quantitative' max='7531149.1163190538' min='332583.26075185963' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='1' field='[federated.09qnjal1wymyae107nl8108zmphe].[Latitude (generated)]' field-type='quantitative' fold='true' max='7531149.1163190538' min='332583.26075185963' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.09qnjal1wymyae107nl8108zmphe].[Longitude (generated)]' field-type='quantitative' max='31857962.547327496' min='25226975.80898153' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='TailNum-Flights$MeanArrivalDelay'>
                        <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (Origin)]'>
                          <groupfilter function='member' level='[Origin]' member='&quot;ORD&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.09qnjal1wymyae107nl8108zmphe].[Action (UniqueCarrier)]'>
                          <groupfilter function='level-members' level='[UniqueCarrier]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Flights-Dest'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='2' param='[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Flights:qk]' type='size' />
            <card pane-specification-id='1' param='[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Flights:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Flights:qk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:ArrDel15:ok]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:Dest:nk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:DestState:nk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:Origin:nk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:OriginState:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Flights-Origin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='2' param='[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Flights:qk]' type='size' />
            <card pane-specification-id='1' param='[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Flights:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[cnt:Flights:qk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:ArrDel15:ok]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:Dest:nk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:DestState:nk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:Origin:nk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:OriginState:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='DayOfMonth-Flights$MeanArrDelay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:DayofMonth:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='DayOfWeek-Flights$MeanArrDelay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:DayOfWeek:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Carrier-Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='0' param='[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.09qnjal1wymyae107nl8108zmphe].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:Carrier:nk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:UniqueCarrier:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Carrier-Flights$Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:UniqueCarrier:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='TailNum-Flights$MeanArrivalDelay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='7' param='[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]' type='size' />
            <card pane-specification-id='7' param='[federated.09qnjal1wymyae107nl8108zmphe].[usr:PromRetDel (copia):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:TailNum:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='DepTime-ArrDelMIn'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='12' param='[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelay:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[hr:ArrTime:ok]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[hr:DepTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Distance-ArrDelay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='6' param='[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelay:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:ArrDel15:ok]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:DayOfWeek:ok]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:Origin:nk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelay:qk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='DepTimeBlk~Distance-Av.ArrDelay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='2' param='[federated.09qnjal1wymyae107nl8108zmphe].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:ArrTimeBlk:nk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:DepTimeBlk:nk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:Distance:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='DepDelayMinutes-ArrDelayMinutes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='2' param='[federated.09qnjal1wymyae107nl8108zmphe].[sum:ArrDelayMinutes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Distance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window class='worksheet' name='HistArrivalDelay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:ArrDelayMinutes:qk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:ArrivalDelayGroups:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='HistArrDel&gt;15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='HistArrDelay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='0' param='[federated.09qnjal1wymyae107nl8108zmphe].[avg:ArrDelay:qk]' type='size' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='ArrDelay~Origin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:ArrDel15:ok]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:Origin:nk]</field>
            <field>[federated.09qnjal1wymyae107nl8108zmphe].[none:OriginState:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='DayOfMonth-Flights$MeanArrDelay'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='DayOfWeek-Flights$MeanArrDelay'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='ArrDelay~Origin' />
        <viewpoint name='Carrier-Flights$Delay' />
        <viewpoint name='Flights-Dest'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Flights-Origin'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='TailNum-Flights$MeanArrivalDelay' />
      </viewpoints>
      <active id='8' />
    </window>
    <window class='dashboard' maximized='true' name='Historia 1'>
      <viewpoints />
      <active id='5' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='ArrDelay~Origin' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Carrier-Delay' width='192'>
      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
      kP9mPWUkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Carrier-Flights$Delay' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      ywl4zAnM1TQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      vqZpmuTzeduIvpPx57yWruu2R0q+jzvp/u5xhBDU6/Vdn8PHhWSySCTieT93YnSJRqNBsVjs
      sCWazabtBq7X6w83FWJjbZ2eZBpVVdECAZayK2j9IaaPHeLtN9+iUWuwWtxicHBw3+eS7kkz
      3D/EeGYEs9rk2NQhrt6+TjCoszS7YB/nNhyd6GYrOI9z6tpOP/ZuurY8Vv7dzciXP6qq2kLF
      qVo1Go2W90vXO+wEoM3e6WbD7JdB7BYYkUiEYDDY5qly32s3OJ+rG9IQlsb9Q2OAZrNJMVcA
      oFavcXt9noNnjqDrIT786XtETJ3TR04SFLu7t+4nxo9Mcmn2KrV6DUsTjA2NsLy5SowwxUIR
      2N2L4oTb6NxN3fA6xw0vSef1XAKBAKlUinA43EY0Un8Ph8O2EejW91OpVIeL0Q2veMH9gPtZ
      KopiS2rAU83rNk631VgI0SkY9jq51ZXVe7oxL1iWxaUPLjKZaaU2LGdXOfbUE8RiMUrFIqOZ
      YaLhCEtbK7z8S688sChkKpWiGRRMDE+Qy+foGeojnk6QjCdZmJ3v0Ned7ru7kUrdDLzdvB7d
      pL77O1VVqVQqlMtl28aQtoWU+s5IqbyPWCzWdj3nNZzzlZKzVqtRKBQol8v3xTD2esfO+btt
      KLf65vZadVONnPclhNgbAyiKwuDQ/VFDTNPk0keXiBMGAXNrC/QdGLSN79HxMa6t3KJIhSef
      P3vfjfI74elnnkbRVHp6M9y8dROz1OCdq+cxyy1PiFeqgNvz46VX30lieRmd7uOcalA3NBoN
      6vV6xzxgJyrtVqekYVsoFDqu6Z4ntFaTcrmMYRjU63Xy+TyFQuFjJVM6DVWnSuaej9eq6Vw1
      uj1/J5zMtmfRKkQr6nqvEEJQyBe4+PY5ekmAonBtbYa+qSFGJ3aS3DbWN0j1pnnquWd2gmkP
      EAMDA/SO9qKiojRhcW0ZyzKoGAYzl262DHLR/uCdcD7cbgabhHMV8XKfOqWvW6Vy405qmBCC
      aDRqE638XtM0arWarSJ5zbMb4cnPTNOkWq1SKrVc13erssrx5by63YvXiuflbGgjcFeQTa7E
      8rw9B8IURelIObgb1Ot1bp6/xkT/KEIIVorrvPSZl+2bkJMcGh6y83oeFianp6jUqlSWFhge
      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
    </thumbnail>
    <thumbnail height='192' name='DayOfMonth-Flights$MeanArrDelay' width='192'>
      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
      25JfJ3M3zIz1cLxrmmd3bqb74hkOn7hMXdMaTp1tp21NGydPtrN982pknYKqwrmrE/z9L5Z+
      Ir+61sq3fv/hW+pxzwQw2HeVnKIyDFIEgzkHnRqmf3CChoYaHE4PBjnGtDNAQ93Ke7XLj8Sb
      x3q4MjC95Pada6vY3rZiye0flex8Ky/8xvyYefWaNcTjcWSdjsbau/sQeKqU163l619pwqDX
      U9PQSKbFTFyJsbKhBYOk0Na6FpQozW3rUn649DBxbwSgRpmdmeLI6YuEpy+z9umv4ew7iss/
      x6zPR/vJ83zy+Z384rWf8Y1vfvOe7PKj0j/u5FTX+JLb68rTbx77b7+7H6c3uOT2P//cDhor
      C9Oyb53eQHa2AUVRMFvmb7oNGDGpKqrKtYdvKayZeki5N9d8Nc6xU+1saFpBMKpjdHiAptZW
      RocHyCu2kmkEBYnc3CzCSuKP7GkFjz+Myxda8l8slt62mhjs5Yf/+ArdA6N8+7/+HYoK7aeO
      88or/49Txw5wtD01T86HkXtyBVBVmd1P7CSzqJQ/+vqf4p+LEAj4eeq5f0V5to51j60nrsKW
      XU+SYzIQmktx6YAgLZhNBuLGbNoPvc3krBOHN4ReiVJR30hbWz2nO+/ugeTDxD0RgKQzsmbt
      zWmwPFMmefn5lF9bmVBQlJ75dMFHw+F0U1xcxPZtL7F5xs6V9qNICmSazFzt6cXnfXA+PJ8u
      7tlNcDjg5d19+7EYDUy7PbRs2kWJIcLR46fIzivE4fLwmc99hjTO7AlSpL51LfXXZsJys1ay
      sqpqkWlXaquxHk7umQCM5gyIh7Bk5tJz8gzFdetpXV3N2NgQVZZMxvuu4IhBaYqr9QTpY9od
      4N/9/b8suV2S4J//Q3r8lh4UkhZAOBREQQY1jiTr0et0qKqCwTC/UMvvmsEdklmRkUXTqhZm
      Bzu4ZIpQU9dAdU01kTiULP+aLsECVEXFOxdecvsjPPt5g6StER0z0/QP24lHfDS1rWG0Z4Bs
      m43G2ioAsgpt/O7nPwvAus1bCIVCmM1mNq5bD8D6deuYdwwgqSW+N10DEkUvcBhIInGybgTq
      gtiEFagLYhMEL8ybVB3Jxl6rQU2iEZI9rkX7v4dtm1INanprSPoK4Jqdoam1hXjAx3B/PwGf
      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
      ufDiEcH/B/iGHYXkinToAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='DayOfWeek-Flights$MeanArrDelay' width='192'>
      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
      0f4fukfP0y/3fIkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='DepDelayMinutes-ArrDelayMinutes' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='DepTime-ArrDelMIn' width='192'>
      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
      vaydtbygnFsveieyJKPqKi+2P084Q1pFIXSG/cMZA1suNOQHwBKiobiRG1rfknXjKSHxzove
      xd9c82kkSUJCwqyYGfEPI0htu3A8hCfsMf72hj38386fM+DtTyu339vP3z/yKXo9PYwFR4lp
      sTSatuFDPLD3l+f9IMk4AMbHx4nF0htlwZlf4CJQLii0uqgvqjc2rQcG9/GZR/+WUCyUQvfr
      fffz7e3fNP4ucZby7du/y/KyZuOaLnTu3/sLvBEPX7jpy1QWVHL3E//Ci+3Pp/GNqBH8kfmH
      u54ryGgIO3z4MK+88gpXX301K1euNK6rsRhRVUORBLLJQjwawWZ3oCjyvJzh4vE4ZvOptQrn
      qzPcfHjHtTjdk100l6Vqcsb8Y8RFfFYXCU3X+NwfPku1q4ZPXvP/EAh6JrooL6hMCYeEC8cZ
      LuMA2LFjBxMTE9xwww0p2Zv373ydockA5aVuJCGhKxIOu5uVrcuMBoNUz9DZkOsAgNwtfrny
      zpVuMcpcSt4HBvaxrf0Z1lWv580tN2alS1r2cxkAC13HuViCT5d3xqHjcrno7e1N63C6bMJp
      tSHLCmgaJrMFIaYPsJ45lnKR76UpY1oumEuaj4WmW4wyZ9JpuooiZ5/FcinztwceoLV8JRtq
      Ns9Kt6byIvr9fYTj4ZzK3Xr4UVw2N1c1XTsr3UK2z1z3hqfDO63VvV4vY2NjVFRUpI2YVatW
      EozEsSgC2eIgGvJT4C5GlmWEEAb9zN9nQ65iTbLiudIuJN3plumL+BAI3DZ3RrpeTzffevFr
      /PMNd1PqLJu1zLgW58ev38M717ybGnddCk1Ui7K983kG/P28Y80fpZUzk/aW1bee8lmSK3pM
      i6Hq6qzPn0v7hGJB7n3jR/zxxj+hzDn7wXtzEYFO932nDQC3240Qgp6enrQzvGwOJ7YZoqLT
      nnsUULZKne/4xa6fEtfjfOqaz2S8X+Io48bWmym0Fp6yLIEgEg+jidQIMkmSeP+mP+Pl7hcY
      Cy5sbPVt6+9ckHJ0IQjHwwsa/bYQSNsDCCF45ZVX8Hg83HLLLTmfEpKPCMtMNxEaRwiRMrvP
      h/cjB39DlauGyxuuzEjnDXnRUClxlM65jplwoWyC0ziMj4/T19fH+Pj4os/QQggC0QDPn3jm
      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
      FpijAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='DepTimeBlk~Distance-Av.ArrDelay' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29eXQcx3Xo/avunn3HDhAgwAXcF5ESRVLiol0WZdmSt8ix4+f3JfHysjj+
      Yvv5xImfnRe/OHZsJ8+Ot+flxbGdL/ZJtMSSrI0iRYk7Ka7gBgIkQOwYALNPz3R3fX9AJEUR
      AIEBQBBE/87h4WCmquZOd92uW3Xr3hJSSomNzQxFmWoBbGymElsBbGY02lQLYDMyVj7FU8++
      wC233UltRTFCUZBS8saeV4nmXKxcNJvSkgoQAgFIKXnlxd9SWjMPke4jMmsZsyoDCCGm+qfc
      kAh7DnBjY6a72XG0g9iFw+zb28DcJashn+Sh+9fQOlBMpu8gO198FV/NEiJuHV0E0fQBXGWz
      COViHO/I88lPfAS/237WDYV9VW5whOqk5cxxFi9ezArpw6W5yeVceL0BgqYLhxnh1tvWEK6e
      RybZgy9cQduZEwSKy/DhY4EzQz5vgK0AQyLkINgDwfQg1tdPoChiT94miEsKkEqlRl9LSiwp
      QUokIIQgnU7j8XgmTVAbm8lAg8EO7Pf7R12pv7ed1vYk6Xg7OcXNpjvWIYQgEAhMmqA2NpNB
      QSNpMFyCU1NRVCcOhz0Y20xfCpoZJRMJ3D4nZeXzMXFMtEw2NteNCVsGTSQStglkA1KSTqdw
      utxks1l8Ph/5nI5hSlwuBwgVVblxfBL22pjNBGOxb+dWsoqLaGsTmx75EFasg99u283a+cVk
      Km9jXX3FVAt5CduAt5lQpJSEw2UgNCqKi4n2xwn4PNy6dj2z62rI5HRupAV3WwFsJhYhUJxu
      VixdTnD2IrxGArwRVi6uJ57zUOGyplrCK7DnADaTitGyG+H0oVYsH7mglMTjMTxeL+l0lmAw
      gJHXyRkSVVgomgunY+It9oJajPf3ojh9dLa14A8XU1FWMtFy2dwESMtE3/51ZD6NY9HDOJa8
      GxGqHmZjnsm+114Cf4TWk8d45CN/xIEXXyAway7x9hbUcJD7Nm6YcBkLUoBMOkEurVJWEqIn
      ZWCaJqZpYhjGRMtnM40xj/0apW4DjjUfw2jdTXr736MqoC16BFGzHjTX5cKWgT9YwkDOpCwS
      pK2zj0XLl7BnXwPFkSACa1L6VwEmkOTcmeMMZN041SyLFi9DEbYJZHMlZu9p9B3fxPPIPyLe
      0tGteDv5hqcxW/egVq0aHBXCs0FaHDt6jPKqWbR19+BXBeGQj6zlwClzOAIRikIT37/sOYDN
      hCPzaTJP/ynue/4SJVI3dBkzj9myi3zDU2DmUatWoVbfdu25AoMrTQIu7UO7sgsLxhL6YCuA
      zYQipUR/9euopYtwLHnXqOpY8Q6yz/8FMtWLtmgLjqXvQfjLhpwrWKbOKy/+Fl84QkfLee59
      9EN0NDXQ3NhBMpuialYVd6y/fdTy2o4wmwnFbN4OegJt8TtHXUcJVuJ534/BzGM0v0r25S8j
      3GGcKz6AUrEcoaiXygrFgd/lwHJFMPUzpLN5sukk5XNqGDh+lFgmPSZ57RFgpiMtDux9DYcr
      QG9HFwtvuw01k+DQyWaKIkEsQ7Ju/ZpRNWUlu8g+93k8j/wDwh0ah0wSs/cU+SO/xoq14li4
      Ba3+foTTh5nP8OqO3ZSUl9IZjVLkDYDIgeLBzKYIlVWxcF7dqL/KHgFmOkIh6PFyprsPt2Kh
      KhrBSJi2xlaSlWFMAetG0Yy0DPRtX8V5x5+Mr/MDCIFaugj13r/CyvRjnPgNmaf+BLVyBWrd
      nWxetxLFW8S1ZwvXxlaAGY60TKLJLC6npKtLp/T8GdqFi+raYjyhCMao7ANJ/tAvUUoXoVat
      mlD5FE8E5+rfw7HyccyWXWSf/RyOJe/GteHPJqR92wSyuYK8nkXTVIQ6+m3uZtdx9N3fw/PO
      byJU5yRKB2bbQfInnsZ935cmpL2C9gIZ+RyGaZFOpcjq+QkRxObGwHzt62Se/G+YPaeQlnnN
      8lJPou/4Ju67Pj/pnR9AqVyJ1XcOaeYmpL2CTKC286fBWcqZk4dYdsvtlJeGkVJiWTfWRieb
      sWH1nMSMnkVbuAX94M+RiQ60mtvQ5t+PCNeCePvzUpJ7/R/Qlr0PAlXX6f4LlFmrMVr2oNbe
      Oe7WClAAiT8QIjqQIRAO0dlxgbKSkJ1VYppjJTrRt38N9wN/gwhW4Vj+PsinsS7sI7fvx5jJ
      HtSa23HMvw8RrkEIhfyZF5GWhVZ//3WVVat/kPwb/zJVCgCqw0tpuYOy8iAujx9FUS79s5l+
      yFyK3Mtfxr3x/0UNV1/+wOVHmXc32ry7kXoC4/wu8nu+h9TjKEVzMTsO433s+wj1+q6liJJ6
      cvE2hJVDaO7xtWVPgmc20syTffGLaHPvxrHggdHVyQyg7/w2wluEa/0fTbKEQ6Pv/i5q2VK0
      uZvH1Y6tADMYKS1yO7+DcPlx3vpfGXETjZR0dbYRiJQhjTw+vw89kyKW0vE4FHTDoqS46LrJ
      bkbPktv/EzwPfmVc7dh+gBmKlJL88SeQ2TjO9X88cucfrMG5xhPE8yfo6O7nI49/gJ2vv0xj
      8wA15X4q65ZcVwVQInOQiU5kPoNwFJ6QzTbaZyhm627Mpu24Nn8WMYq5m5QSp8tP3hI4nNAb
      7SOtS4J+hdoFizlz5uh1kPoyQlFQa9ZinN81vnZsE2jmYUbPor/yFTwPfwPhiYyqjpQWba2t
      +MIRYtEoOV2nvLKcVCaHRxNIzU1RODjJkl+J1XcOfc/38Tz01YLbsE2gGYaVjqJv/Rvc9/2P
      UXd+ACEUqmfXAhAJXu7ooXFu+xkPIjIbme5F5lIIp6+gNgoygexs0tMTmc+QfeGLONf/0bCB
      KtMJIRTU2esxzu8suI2CFODcmWO0d/azc8cOov2Jgr/c5vphxdvJvvRlHAvfgVZ921SLM2E4
      6u/HOPNCwfULMoEqqmbR2y+prCqno7OLcNBrB8XfwMjsAPpv/hyhaIj6h26u++SrxMoMYKQH
      wDn6DOcXKWgrRDQ6gIkTy5JUVZWjqiqqqqJp9pTiRkJKORh3u+eHuNb+IVrVasRNeI+sujuR
      rbtwLHxozHXtVaBpQF9PF5bmITXQQ9XsOWQT/XT29FFcHCajW8yqLL+qjsyl0Xd9B5npx7Xp
      MyieIg7uex0pNLraOlhxx2aqivxsfWknwbAXPWewcdMdU/Drxo8Vu4D+2rfwPPyNMde1/QDT
      gET/AK+99GtePdTIjt0HUFWNg28cJJ1M8NLW568oK6XE7DxK5qk/Ri1bgvvBr6B4i0EIQj4f
      J083ULtsHR3dnezcvoPuaC8XOjtpi3ZP0a8bPyJYhcylkNnYmOvefOPhTciOXTtZs+Femo++
      gcMKkDMsyqtqEaaF9ZbAFWnmyO3/KWbXcdwP/k+U4KzLn0mLaDzN3MUraDmym4qaSqqWr6as
      qpNYIkEyN33nBUIoaLV3YjTvwDGGYHywTaBpQTTag6I6yabSOIWBM1SK0+XESCdIm1AaCWL2
      nUPf9lW0ORtxrHwcoYz8bDNNE1VVRywznbDiHejbv4bnkW+NqZ49AkwDiotLB1+Er/Q6uYIh
      3H1N6Lt/idl2ENfmz6GW1I+qzZup8wOIQDnSzCIz/WNy8NlzgGmNJH/wZxhN2/G8+zuj7vw3
      I0IoaHUbMZpfHVM9WwGmMTITw4o24X3fj6/IvzlT0ebdi9G4dUx1ClKA82dP0NOXpO1cI129
      A4U0YTMB6Lu/h3PN7xe8D+ZmQ/jLkNLASkVHXaegOUBZeTndvUlOnWhk1hyFkkjA9gRfZ2Tf
      WaxYG8y+077ub0Gp3Uju7CtoSx4dVfmCPMG9Pb3opos77lxPNm/ZnuDrjJSSzK5v49r4aVT7
      ml+BMv9esi9/GW3F+0ZVvoCrJ6iZs+DSX2PffWEzXszm7SihapSiuVMtyg2H8JUghMBKdqP4
      y65Z3p4ETzOkkSO37ye41n5imKOGZjZCCNQ5d2E0bRtVeXv8nGbkD/8SbdGW8SegvYnR5t5F
      9sUvoix+J6/veJ05tXNobOvgro0baTnVQFy6SPd34PYX2yPAdMJK9WKc3YZj2XtHEcQ+cxGe
      EDLWinX6BcxUPy/ta6C+OsyF/ixvnDhEJt5H/ewqhOa1FWA6kdv1TzjXfnxMiWtnJEJFKV9K
      Xs9iuoMUezT2HTpFrOMckeIyEuk4ze0DLFs82zaBpgtm9wlkNo46ezTZ+mc2QgjUWbehaU7u
      u+/BS+eJZdJpli1ZeKkM2JPgaYGUFvrr/4jrzj+1J76jRAmUYyW7Bq+XEAgh8Pp8iDdfXypX
      SOMdrc3E4mnOnjlFV2/fhAltMzTGmRdRSxYOHidqMyqEvxyZ6LpmuYJMIH/ARyyho2LS1R2l
      JBKyPcGThZEl98bPcb7z25jmtfP12wwi3RGsZM81+2RBnuC+3iixrIZDsXA5VNsTPInoB36J
      c+ljOHwhwDZ/Rot0+cmb+jX7ZEGe4Nr5iwe/RErsmzJ5WIlOzNY9ON/zA+zrPEY0J5i5wUO1
      R5g3jWsSPDihGE8LNsMhzTz6a/+Ac91/u2Z0l83VCKEM7pLNJUcsZ68C3YBIy0Tf+jeYnUdQ
      q26ZanGmLcIdRmb6RyxjK8ANhtV/nsxTf4zwleB56O+GOJfLZrQIXzEyPXJsgD22TgJdbS0k
      8gouM4EjUEFJ2MX+Q8dZMH8uFzp7Wb5k4VUWvbQM8od+idH0Kq7Nn0UpWcDxAwcxeo4wEI1S
      Wjab0pDKzr1HWbKsnp7eGHesW2v7BUZA+CuwEl2MFP1sP14mAVVonDy6k2de3EUqk6bzfCvd
      0RQHD7zB3t17yJtXJuIwo41knvgkWCaex76HWroQIQThYj+JpE5NJEigpJzSqjpCER9VxSWc
      OnNiin7d9EHxlyOTnSOXuU6yzCiefe43FFXMpTQYpPHcKXQJ5kAPPf0Z/D6VnDF4nKg08+h7
      /w/69q/juvsvcNz60Sv2+eza9wbhcJiBvIMi+rjQ3km4rJbu7m5CFbOG+3qbNxGBcqzkyAm/
      CsoLdKmKlCAUhLDzAr0VyzSRgLQssqk4UvPidmlomophWGgODav7BPr2r6PV34djxe8glJHT
      lOi6jtPpRAhx6frb5s/IWKle9G1fxfPw3w9bpqA5QPPpI2i+arLJDtJ5jVuWLypYyJsR5WLO
      HVXFHy6+8rPoMbJv/BKZS+J+4K8RwVmj6sgu1+WsD3bHHx3C4UXm0yOWKUgBKmfVEO23GEik
      Wb5yFaZp2lshRonR/Boy1YPzXf+EpWhgb2+YPISGzOsj9svCtkL0x7GEk9KiMMlEktLiiL0V
      YhRIaZHrOIR7y9dRnOM74NlmFEhJzuFGtfRhU8cUtBViVk3d+ASboVgdh1FCNSje63ec6IxG
      CIQnjMwODKsA9irQdUJKSe7Ir3Gs+MBUizKjULxFyPTwW/ZtBbhOyGQnUo+jzOD8nVPBRWfY
      cNgKcJ3IH/sPHEsfQ9hbG64rwl+GTNoKMKXIfAaz7QBa3YapFmXGoQQqbAWYaozGl9DqNtoZ
      nKcA4S/DmmgFsA/KHj1SWuRP/AZtybumWpQZiXD6kLnUsJ8Xlh698ThdPQmO7N+PbhUs24xg
      cOmzevCgOpvrj+YGIzvsA7sgz1V55SyiMZOScBgLbE/wCOQO/wrHqt+zr80UIoWGqacGleFt
      FHZQdm8U3XJi6BmUvn4qSmxP8FBYiQ7IJdHKF9mrP1NI3hNGySdR3FfnMi/IE1xdN38CxLr5
      GVz6fNTu/FOM8EYGQyMDFVd9Zt+ZSULm05htB+2lzxuAwcCYoVeCbAWYJIzGl9HqNthLnzcA
      wl8+rDfYVoBJQFom+ZPP2EufNwiKf3hnmK0Ak4DVeRQlOMte+rxBEIHhnWG2AkwwUkpyR3+N
      Y8X7p1oUmzcRriDo8SE/sxVggpGJTsjGUUoWXLuwzfVBcyMNncFTAq5kSAVoaWkhFosN6z1r
      bTpF30CSE8eO0Nltp0d/K/njT6DZS583FIOpJQXSyF/12ZB+gGw2y44dO1ixYgXLly+/6vPi
      0lJ6euO4AmFi0V5Ki+306ADkMxgX9uNa/VH7WtxouAIY6T6Et+SKt4dUgHg8jsvlYunSpUN8
      Kunt6SGdc5DL9lNUWm2nR3+T/JntOOZsRHN5p1oUm7dheItQcnHU4JXOsKt6rJSSoqIiOjo6
      sCwLRXn7UC6YPXfhZMo6LbFSveSP/hr3w9+calFshmAwMKYb3jY3u8pQTSQStLa24na7UdWR
      kzXZDCItE/31f8RK9SBcV+83sZl6lGGcYVcpQDAYxLIsmpqa7CN5RoHMZ9Bf/p8ogQq8j/8S
      VOdUi2QzBGKY7RBDmkBSSqqrq2e8TX8trHQf+ov/A23+vWhL3s3pI8c407mTmiIfVngeNR6D
      V/efYN3tSzl8vImH7r9rqkWesSj+cowhFOCqESAajSKEwDAMLMuOdhkOq/8c2Wc/g2PVh9/c
      8SnI5JPMqqjhRMNZ2tp6cHh9+JwKiiuCy2+bk1PJxfxAb+eqR3woFAJg+fLlMyYHZWfLOdoG
      kjiMBOHyOmaVFbFz9x6WLlrMyeZm1q+5/fJRUFJitB0kt+s7uO75Amrx5a3hpqUgUPidD3+I
      lpZWLrR143C5MBJR0kkd3TBxabYiTAmaG5nPXvGWlPJqBXA4HLjdbjo7O6mrq5sRSuDx+Og4
      dowF1ZU0nDzOrPJNKNJk66uHWb28hAsDWWoibqSUGKeeI3/yN4PpDX1XrinfevvaS69r5wwq
      xsWF5Oq6uuv0a2yGRHWCtJBm/nIKesMY2hOcz+evGfQupUXTmVPEk5kJl/V688q2l/GFy4ml
      s5hIGg7t5Y1TLVSXeDh4+BQhrwNpmeT2/Rjj/Ot4tvz9VZ3f5sZGCIFwB5Fv2RNk6frVI0A6
      nSYSidDU1DRig2Y+R96UtJw/z7Kli7Asa9p6P9/52PsGX0iJaehkcpJP3LIOgFvl7QgrS/aV
      byCdQZx3fxFTUWGa/taZjHQGMVN9WM5BMz9z4ODVCuByufB4PNc87EJ1OFEUSVFROQCKotwU
      q0aaw4HLc/lvo3Uv2Ze+jHP1R3Cs+MCMMAlvVsxAOSITRSutR0pJ9sCBqxVAVVXmz59PKBQa
      8WYLoVC/YPGkCjzVDNr8v0WrWYtj+Xvtzj/NUQKXfQFmXz9IOfQcoKGhgYaGhhmf/Mo8twNp
      6rju/Uv7sOqbgLeGRmb27cO7Zs3QCnDhwgWczpnt0bRSveT2/QT3ps/aW5tvEi56g6VlkTl0
      GPeqW4ZWgEgkMqOf/tIy0bd/Dee6TyA84akWx2aCEN4iZKYPo7MTxe9HDQSGVgDTNBkYGJih
      nmBJvuFJlGAlWs3aaxe3mTYIzYPMZ0nv3o13/eC9HVIBNE2jqKhoGu0GlZf2MI135LL6zmOc
      eg7n2k+CPem9udBcyLyO3nAC95uxLkMqgK7rmKY5bcyg1jNN/Orff8VLzzzHtp27APiPH/0z
      vQNR/u2JZ0bdjjRyZLd/FdfmzyEc9iF2NxtCCCw9iFZZieIevL9XKUA8Hqe7u5vq6uohgmEu
      c9ETHB0YOtr+epLNJZk9dwm+4nJcToX+1rO09MUYyApKykd3eLeUktz+n6DVbUS1A9pvWvKp
      Wrzrbr/095Bre36/n1OnTlFTUzOsEkjToLm5ieKcJBzwYVnWlM0ZTBQMPUOZz4niD9PWl+UP
      /+DD6JbB6XiKvmSWsHfkVS2r4zBGdwOeLd+YoXOfmx+Zy5FrPElgy8ZL9/gqBQgGg9x///3X
      bkxKfIEQTsdgPPBUOokWLF7KpWe2ZWH2D6CGw3iAdzzw4LD12pubuTAQp9hh4j/6bfybPsPL
      W7cyt76etvNtrN90J9NlFmRzbfRTp1F9aWSq89J7BXt3VIeLtevWA4MdXwgxosk0GqRlkkhm
      UMmRSFuUFvtpPtdCSVk5sYF+Zs+uHVHRrFSK+NP/SfyZZwk//jt4161DKy4adjIbDAXoPX2S
      YPsz9Kz8IBXVy4i09XHs0EncYS85Q+Jz2ipws5DZswff3Q9AqvtSXx2Xe3Oin/r90S527D9G
      tr+b+UtWUVoSJN57gcNHm5lV6iLrCLGwKnJVPSMaJfniS+iNjXjXr6Psv38Oo7+P/n/+Z7Ak
      njW34Vm9CjUYvKLe9td24DM66Ww5RWZJBcHm8+Q1PysXFvPGqRMkddNWgJsEK53G7OnF9ehj
      5I8/cen9G8q/79Bc9CX6KHEHaO2+wNx4FfGcYNXi2TSda6REuaxwUkryLa0knn8Bs78f/333
      EHrfexFv2ZDn27gRs7+fzL79RL/7fRSPG+/atbhXLEfxenn4vg1kn/0cnr94Ekt1ouckdXPr
      AMnsRUvGPaLZ3DhkjxzFvXwZwleCTEcvvS/kBK11JhKJa+4gvRbZVJL+ZJqg103OMkkOpCir
      LMPp0Ojp6aW0tBSkRG84QeKFFxEOB4EHH8A5fx7iGp1VSonR1U16zx70Y8dRggHkwGkiH/kQ
      Wq3t8Lom0mL/ntcoraoj2tvP6tUraWtt4nx7jNKwg6zpYPmSGzNdjpSS6P/+DuHHP4AaCZB5
      9jN4H/0ucIONAG6fn0rfYFoRHxAJXTZ3ijSN/p/8FKOrC62qivDjv4NWWTFqM0wIgaOinNC7
      34V85xYSv/giqRaNgaf3Ef7QArSiq00rm7ci8KgqZ5qbyRk5AE6fOkZL6wDMq8FzAwcIWfE4
      lp5FLSsDJBg5pLQQQrmxFGA4pGURf+pp9MZGSv7sU2hlZQXPP6SU5PZ8D9f8SpR3/S7tew+R
      /OY3Cd19N961q2k830ZN7Wy62zqYu2ABynVc3Dp15Ag5TaW/p4eyylqK/Qp73zjOwoVz6e1L
      snbNrVO22ialQUw3kUJy4fw5Dh85giGdBEJePIEA7T1trOLqNJo3Apn9B/DeevHaCYTTC3oS
      3MHJVQApJQjBeG6ZNAz6/+XnqMEgFV/5m2uaOteSJ7//p8hcGtfmzxJr6+Roqo/qjcvoPNNO
      7a6ddNVVcbKhEcXvpba+HmWEDtd88iR9OYN55WHieCn3q7y+5w1WrFxKV+cAS5fWj0m+YMjH
      yfMdzCsrIucJUFJZjO90I6XhIl7buYvb19yKAI7s2UvSStDemeLW29bhIcHL23ezZu0qWls7
      uPeeewu+RsMhFAfr79w4+HrTXaQSCVa8JW/sLcNVlCa7Xt9OeWU158+3sm7DZi6cPc65jhjz
      KsL4Z9VTFvIMV3vcSCnJHDhI0cf/8PKbrsHQSOEOTlx69ERfN//+9HN0tjbx7799BTOX5J9/
      9iNefu4lfvYvPyeWTI9d+Hyevh/9GK2sjOB7Hht/5z/yK6yBc7g2fQYhFA7s30lpdT0Ot4v4
      unUo73yEge17KD10ADU/QGdMH7HNYMhPT1c7O/fupaN3gEQsRipjIhQn7X3tY5bxldd2Eiku
      pSOWo8pv0NbegTdSRX9fFE9xKZdmay4LlzOExx/kzNkGyqvnUlldSWWkmPPtnSN+x3gQQiCE
      QFoWxksvE3/yKWQud+n9oVFwC8mF3n76WhvpT+vMX7QMVTEJuHSao8MfYj0RmD09CKfzihVA
      xVeCTPUCoH7pS1/6UiENW6bBqYYjtHQNUFleAqqDaDJKT0sb/ekcC2dX0HiuFbfHSU0kQEw6
      qSwZvZ1tZXX6vv8D3IsX4X/g/nEN/VJKjJPPYLbswn3/XyPUwYGvqrqG4kiYkopaKgIOTE+Q
      Fe95lDJNQXt5B9X1tWglJcP6EX77/HOUVtRQFgkQ7U+gIunv6cbpcHLoxHGWLVmOpo5eaZev
      WElFWQnV1VWYUhCKRKipLCNUVMLS+gUob9pjh944QlFZOblolMqiMDoq/nAF6YFuDLeH+bNn
      F3ytRkIaBpmDBxn4l19gxWJIXSe1dSuZo0eRhoEaCqE4nVdcL2nlONN8gbSeQXM7SKQMrGyM
      8rrFdDefoHnAYHFd1bishJFIvrwV18KFOGqqL71n9TWDtFCL549vFajx1DEq6xbh1gQXmppo
      OHeOO+/cRC6boKPlAslUP7Nmz6epsZFbb1+Hx+UYVbsynaH/Bz/As24dnvXrChXvEmbTNswT
      T+J88O9glIfWmf39JH71a9AcuFatxL18OcIxvPxGLoslHDgd4/MbyGyWfHs7mdd3kj/fgvv2
      NajhEEo4jBoIovh9KD4fvDkaWpY1aKZN4txA6jrpnbvI7t6Ns74e7z13oxYV8aYAGN3d6IcO
      kWs4gRQC59KluFeuQCsvv6qtdCqF1+ebNFmvwLKIfv3vKfrUnyLclzc3mk3bkPELaLd8eHwK
      EIvFLiXSevsyqLQs8i0tOGpqEGPYVm3GE0S/+13899+HZ/XqIZ/8bY1NHGk6RUhzo4TCrLt1
      FTueeZ4ld9zKnn3H2PLAXRelwGjZQ27/T/G885sI59guvLQsEs88S+yJJ3HNn4c0TFCUQVNM
      vfi/huJ2IfMGRnc3vs2b0IqLUYuKUEJB1EBgWMWRhoHR2UmuuRm9sQmjswMQOKqq0MrLkIaB
      VlKMORDDHBjAjMexUimsVGrwumgOZDoNSEIfeD/OuXNRPBNnT5uxOMmtW8kePYZnzW34N20c
      VL7hrpeUWLE42aNHyBw6jBmLo4bDuJctxb9503XfXp47f57Eb5+n+OMfu+J9s+s4+ZPP4t78
      2fFNgi92/qEwOjro/Iu/xLtuLd471uNevHjEiwdg9PcT/afvEXr0XbiWLh3W7HF4FITmRwSD
      CJEn2X2BvUcaqLr1NjyBy8pmdhwht+eHeB751pg7P4BQFAIPb8F/370oHs/gpN6ywLKQpgWW
      iTRNpK5jdHain21C8fvIt7eTPXYcMx7DSiRBWqA5UHxehMOBGY0iNA0rl0crK8M5tw7/XZvQ
      KisRLtc1zT0pJZgm0jDInTtH/nwL2aPHiD/9nwhVxblwAe4lS3HW1iKcoxt1L12zeByjp4f0
      6zvJX7iAb/Nmyj7/OcQoQmSFEKjhEL6NG/Fu2IDMZok/+RSpV7aRO3eO4LseQacFj3gAAA4t
      SURBVLs4cgz1uywLhALSumK+Z1mDS5Zj1Z/0zt1471h/tZy+UmSqZ/D1ZDnCpGVhtHcgTYPM
      G4fQT5xEOB24V67Es3IFaknJFTfa6O4m+v0fEH78cVz180d8Whzcu4eUKfBbeaTfj8MSlBcF
      sdxutr++g/sffBeh9Dmyr3wFz8PfQvGN7bTGs8cbaOpup8jrQvUEWDx/Lq9sf51SXwntyW4e
      eHALLnV0d+OtndVKpdBPnyHf0kLg4S0oXu+4JvZDfZeVTKKfOo1+vIFcawuKz4d78WIc1dUI
      h4YSDGGlklixOGZ88N/g6xgynSbX0opQVYr+4PdxLVk8ptF7WLksi+yRoySeeQZnfT2BLQ+h
      +t+WRl4avPTcU6i+IG1nz7Dlgx/j0Nbf4qmoI36hGa24iHs33Dn67zQMuv/27waV920jsMwl
      yTz3ebzv/s718wRLy8IcGCB7+AjZI0ewEklcixbivuUWrHSa+BNPEPnof8FZWzum7x2MAuPS
      BBEpMbtPoG/7W9wPfQ0lWDnm33KusYHzPWlm+QWnu5M8sGENz734Eu5QFUtqXFjBemqKRh8w
      09vZTtrS0Iw4Ln85Ib/G8ZNnqaudRVdvjPp5dZMyCbx4zfUTJ0k8/zzmwADupctQ/D7UYBAl
      FEINBlCDIZRgEMXnxUqlAIFWMvFHvErTJL13L8kXXsJz6+rBkfVN21xaJof27iQuHWRaT1J/
      13tx633sO9BAaWkJaAZ3rr36aT4cmQMHyTY0EPm9D18th2WS+Y+P43nv/7l+jjChKGhFRfjv
      vgvfXZuR2Sz6yVMkn3+B1GuvUfbFvxxz54eLS3OX/zZadpN54hN4P/jLgjo/QHtnFLfbRzSR
      pjji4uD+A1iKizlFHg6fbOeBB5aNqT0jl+fwoR20tSV54OEtJLv6ONfWS1dHB61tncyZU4tj
      EjxuF6+5ducdeG9fgzTNSx3uEtLiwN7XkL0OYr39zL3lFjyGzt6n9xIKhxBYbNq0YWLkUVV8
      69fjve02kttfpeerX8O3aSO+jRtAhaRuUT27nHOWRaqjCYffRf2iBXhkBmfk6gn1cJgDA0R/
      +EMC73jH0HIoKjjckE9PjSdYCIHwePCsugX3yhUE3/0IWlXVhLQt0704bvldlLIlBbdxx4aN
      l9t7c4C8aK7NH/LctJF5+ZWXWbhyNXryLI3nTlBfNRsZ66FP8+DzaxiGhWOid51KyaH9O9FN
      i+4L3Sy/YyOzy8I899QLhEuDZLM6d9+zGYRC0OPldFcMLIOgP4xH6PS2dZGTeUw5CYrpcBC4
      7158G+4k+cKLdP+vr+JZcytrl6/AWVPNvDlzCm4719pK/0/+L5H/+lE8K1cOL4MrMOgMm4rN
      cP297bxx/Dy3Lq3l4JkO7rp9Ba9v34bbG6arP8rmu+7G7xndcuXbST/xCdwPfuWGOqU9k0kj
      URCWQTadQnH5UAR4PC6yeh6fzzspJlDziSPsPrSfpbc9TDbTjd7Vydm2XoIRP7pp8sH3PIq0
      TPbs3oWhCqJdA9RWFmNpXgZ6uwmEQ+imZMNbQggnAzORoOdv/w6Zz1PyZ5/CMWvsD0MpJZmD
      B0k8+1uK/vAPEEUBXt32Cm7NT28mzgMPPszx/btxhMpI97UxsP273P/7X5yaESBcXIlwnmXb
      1tfIesKgOlCkSTyRwW3qdMdSBSmA1X8O4QogPMOvNEwFHs/lUyM9visnf35tbKs0o0VKi95Y
      gvlLV9PVsJvSWRXMXr2eOfVRevuixDKDXm6hqKy747KJM/TBiJOLGghQ/tdfIt/eTv/PfoZr
      0SKC73x4RL/LW5GWRfw/f0P+/HlK//zTKF7vYNrDfJZjffDI+jl0xXJc6GrBl8wwt6KE4hV3
      YCU6Cx8BpGVy7NhxqmrqKI4ExzQCRDsu8PL+gzx07wNEo930t3fQn4xTXlpKW1s7t224i6LA
      2I8a1Xd8C3X2WrTaO8Zc92ZnKjp2IUjTJPnyVtK7dhP+4OO4Foy8n8rK6vT/5KeoZaWEHnv0
      0qpVLh3n1V17KSkqoq0zSnVFCUIxSOcEJZEiaq1GZLq3cAUwcxl27NxFecVsFtTPIZFI4H/7
      0tYoeXPP3Pgw8+hPfgzXe34Ewo7imu6Y0T5iv/glWlGEwHvfgxjCwWf29RH74Y/w3LUZz7qR
      YzqklFcsu1udRzCbthVuAikOFxUVZfhCgRvioOx88ytodRvQHIXNHWxuLLTyMko//Skye/cR
      /fo3CL77XXhXr7r0pNRPn2bgF/9K5KMfwVnApNkKVmKOZwR4OxMRETYeMk/9Ca57voASqLh2
      YZvpg5SYqRSx/+/fsDIZQu9/H/qJk6R376H4kx9HDReWu1XqcbLP/+X0CIi5FlasDRQV4R/9
      WrHNNEEIVL+fyO//P+gnTtD1hb/COW8upZ/9zKgnyUPi8CKnyg8w0eQbnsSx5FH7AIubGCEE
      rsWLKfnMn6MVF4+v8/OmM0x1Tn8FkJaB2bIH5+0fu3Zhm2mHtPLs2LaViqpZtLa2s+Ge+2k+
      e4L+821Y+TSR4nIWLpxXQMsC4fJPXETYVGGe34las8Y+weVmRWi4ZJ6+rEVH00nSeYtIMMBA
      PEFj03nOnG8uvGl3ZPqPAPnjT+La8Gk7lflNijSyJPFAvI+iulqOHjpCvPcc5ZW1GHqIULjw
      bB5KoGJ6K4CV7AIzhwhVX7uwzbREcXi45557Lv2d03O43KuAy/u0CkX4y8dhAknJ6RMN9A0k
      xiXEeMg3/Cfa4kfsye9NzsWgeyEELrfrqvcLbtdfXvgIIKVJKp3Gk8kQCngxTfP6HpQtLYzm
      V3E9+r1pe0C3zdQivcXjMYEEXo8bI5ebEk+w0bIbtWolmus6BVjb3HRIT7hwBRCKysIlYwsM
      mUjyx5/AufbjU/b9NjcBTt/0XAa10lFkNo4SqZtqUWxuYKSUGHljMCnam2byxYMUDSOPVLTp
      uQpknHwGx6It9gHWNiNi5rK89MwzdCUMgiGVzQ8+Ru/ZozS1Jgl6kiTxTL8RQEoL4+wraPMm
      Pv+lzc2FZeZJSAcL581hbm01qVSGs80d6Kl+IpFyFGlOvxHAbD+EUrJgMMOvjc1IqBpVFSXU
      zZ9Dd1cP6a4W3vHIQ2RSKc6cPMnSlbdNv+3QmRf+CueqD6GWLpr077K5+ZlUE0hKyUQetS0z
      A8hkF4p9jq/NBDEuBdDTCVJvBlcn+rp59oVtxKIdPLP1dcxciieefoLdO3bz1FNPFZQe/e3k
      Tz+PVv+APfm1mTDG4Qm2OHL4KOU183BXluALl+D2t/PqK68zgAszlyfZ30vK4yXsUmnt7iXo
      qylYUKu/mdzu7+L54L+Oew+Ijc1FClYAy8jjcDiJJRLMri4n1tPDQN8A9z38CMl4Hw0nTlM9
      u4byylrazrdQWRQZ1wns+Za9KKWLkM6AfZK7zYQxeclxpUSmuhG+ws/zuoiV7iP7m0+jbfkm
      PbE8KikSaY3aWWF27T3I3PkLaGu7wO233z7ikUY2Nm9n0oxpq7+Z1I8fxOo6Nq52pJTkdn4b
      55o/IJUzOXKqgRdfep1ULoPDE6SqxMehw2epjHg42ZGcIOltZgqTpgBKuBbXPV8g98YvkJZZ
      cDtm2wFkPoNadye5VJpTzU2UhiKc72ij/UIb7f06K+aWsnf/YSL+ycmyZnPzMql+gItPb+Er
      xbny8TFHbUlDJ/PkJ3E/+L+uSHcipYW0DAYGUhQVD0YEmaaJOgG57G1mFpO6niiEwLn24xjn
      dmB2N4y5fu6Nn6PNv++qXD9CKCiq81LnB+zOb1MQk76gLjQX7ru/gP7qN5DZ+KjrWQMtmK17
      cCx//yRKZzPTuS4eJSU0C8eqD6O/+nWkvPYSppQW+mvfwnXHnyJU2663mTwKVgApJel0CsMc
      3QRXm3c3uEPkjz8J19ggYZx5ERGoRCkf+2EUNjZjYRwjgKSl6QzHTjZeCjIYCSEErvV/jHHm
      ecyeM8O3mo2RP/SvuNZ+wg52t5l0xrEVQuJ0e9Az1luibK4RnC40HJv+O9lXvoJryzdhiKNL
      c7u+i7rycUzNC3awu80kU3hMsBB4vH4qZpWgKAqKoowuKL54Lix/P8au/43rni9csbHN7DyK
      SPXirL9/MHejjc0kU7AJJIRCZdUsvAUcZaQteBAUDePks5fek2YOfee3cW34lN35ba4bU7Kv
      WAiB685PkW94CrOvCYD80V+j1axDCc+eCpFsZihTtrFeOL247vo8+ravYkabMBpfwbHqd6dK
      HJsZypRGlqjF89Dm3Uv63z6M89b/gtBGf/q6jc1EMOVB8drczZgX9tlr/jZTwpSMAFJapNMZ
      pLTIqCHcW75GTyxLLpejs7ODvFH47lEbm7EwJSNALNrF1t2HWTK7nMZomoc3r+XY/t3k8k6i
      epbHHns3Ds1eCbKZfMaxFcLi9KkTtLZ1jrmu2xMgJzN09/aRGIgx0NePJxRB9TiZHRSc7ewt
      VCwbmzFRuCMMgSJAUTVM0xxTevScrnPLwmXU1dVh5jO0t3ZQXFbJsqoqurq6qZ1Vaqc8t7ku
      FB4Ubxn0xxIEi8vHnB49WFRMsKh48A+ng/pFwcufBYPD1LKxmXimXWY4G5uJxM4wZTOjsRXA
      ZkZjK4DNjMZWAJsZja0ANjMaWwFsZjTjOij7Qst5TDtRs800Zlx7gXLxJDkJTsvEsiw7a7PN
      tGNcaVFiiRh9ff2oqmpncLCZltieYJsZjT0JtpnR2ApgM6OxFcBmRmMrgM2MZlyrQGfPnKJv
      IDGR8tjYXFcKVgArnwXNRXd7+0TKY2NzXSlYARTVwUC0C4fHO5Hy2NhcV4QchEwmM66GdF0n
      Eolcu6CNzQ3E/w9bZ4yVVkEpswAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Distance' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Distance-ArrDelay' width='192'>
      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
      2SVS49ZZtiQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Flights-Dest' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Flights-Origin' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='HistArrDel&gt;15' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAALmUlEQVR4nO3dS28b1xkG4PfMhUMOLyIlUbIlWtTFUoIE6GXVGkWRTYAgi/6FLPu3iu67
      b7NpgQB13MYOagdWYzt2YjuW5OpiUqIoDWfmTBeU5CSkjVF4SB3xvM/KEOXP35B8Tc7wfDwi
      SZIERIayVBVSmSNVtXTtadyPT5VR3OfKAiClVFUKcRxrVUdlLR17UllLx57e9txUFgCiy4gB
      IKMxAGQ0BoCMxgCQ0RgAMhoDQEZjAMhoygLwv1cHeLqxraoc0UgoC8CD53u482BTVTmikeBb
      IDIaA0BGYwDIaE6aX0pkjOOgg4zrohPFsAUgbBuWsAAksG17yG0SDUeqALx8+g0e7x5jwhNo
      H4dwLAnbzaKzf4BKbQEr9Xl0l1vrt9Zd1/XpquhYS7ee3jYPkCoAfqWK3NZ9NGQBJc8FAFgC
      CIIAlm2fFU8SNXMBUkoIIbSpo7LW6YOh4oHV8fh07Olt93mqAORyWcwurqFaKaB52IFnSwjX
      x+raO5BxBMuyIAQghFDydihJ1LytUlVHZa0kSU7uLzUPrI7Hp1tPAN54n6cKgOv5mL/qAwCq
      2fxPbs0M3BzRReFVIDIaA0BGYwDIaAwAGY0BIKMxAGQ0BoCMxgCQ0RgAMhoDQEZjAMhoDAAZ
      jQEgo/2sAKjc5IHoIqVaDi3jEH//7Cbqc1VEVhZhaw8ik4crJZxCEdeXFobdJ9FQpArA948f
      4ijowM9P4NmzpyiVK7CR4Pm33+G9G79DHMdIZPdVIYqigZuSUmpVR2UtlTvp6Hp8OvY00Ejk
      wtr7KF9dQBQcoXplHvkMILwC5msL6IQBbNuGsASEEHCcVCXfKooireqorBVFUff+UjARpuvx
      6dZTHMeDTYQBQKlYBIpFTE7/9JbCgO0RXRxeBSKjMQBkNAaAjMYAkNEYADIaA0BGYwDIaAwA
      GY0BIKMxAGQ0BoCMxgCQ0RgAMtq51pqeToIJCOBkQwyiyyzdRFgU4NN//BMrtRns7QfwnBhW
      Jg87DOGVK1hdrg+7T6KhSDcR9u1jJEmC1lGMciGHCAI2JDY2t7A2f40TYeeso4qux6djT4NN
      hK2+h8m5Oqy4g+39Y/h2DJEtYqG+hCjqcCLsnHU4ETbaWkomwgr5PIA86qWf3uIP1h3RBeJV
      IDIaA0BGYwDIaAwAGY0BIKMxAGQ0BoCMxgCQ0RgAMhoDQEZjAMhoDAAZjQEgo6VaDXo2CXay
      nPSHfwY4GUaXV6oAtPb38MW/bqMwNY2cX0SntQcr4wNHAfLVGawuLwAn8waqNs/TrY6utdjT
      YLVSBSDj5TAxkUe5Oo+tp48wUZmEQILtRgOTC/XuxA26rxJxHA/cqKqpKdXTVzrV0bWWrj0N
      NBEWhyFK1RqmSxlkVtaQdxMIr4DlleuIfzDhxImwdHU4ETbaWgNPhPnFCawWJwAAE+WB+yHS
      Bq8CkdEYADIaA0BGYwDIaAwAGa1vAJrNJtbX15V+CEGko74BuH//Ph49eqTsK+6IdNU3AJlM
      BgDX+ND46xsAz/NgWRYsi6cINN56nuFSSty7dw+e5/EcgMZeTwAsy8KNGzfQbrcvoh+iker7
      HicMQ7iuO+peiEaubwCePXuGSqXCk2Aaez2rQY+Pj1EqlbC5ufn6h0mCfmcDDAhddj0B6HQ6
      2N7e/tE67Nb+K6yvf41CuYLDdoCcIyEyeXhCQHhZrCwtjLRpIlV6ApDNZjE1NYWdnZ3XP/Pz
      CMMA++0Qk34WnQRwkhiPHzzGL37/AfcIO2cdVXQ9Ph17Sj0R1m63cefOHSwuLr7+WauFcvUK
      qpMVNFoBKk4MeEX85oN5dMIAtl3iHmHnqMOJsNHWOtdEWLlcxscff4znz5/j8PAQxWIRpcoU
      3q9MAQBmZgfuh0gbfa8CBUEA3/exu7s76n6IRqpvALa2tnDr1i3UarVR90M0Uj0BaLVaKBQK
      WFxc5FogGns9z/BsNgvHceD73P+Xxl9PABzHQZIk2NjY4GI4Gns9AQiCAC9fvsSVK1f4FojG
      Xs9l0IODA8RxjMPDQ0gpYdv2RfRFNBI9AZiensbU1FTPN0ATjaO+73GklJibm2MAaOz1BCBJ
      EszOzuLLL7/kSTCNvZ4ANBoN3Lx5E67r8hWAxl7POUClUsEnn3yCra2ti+iHaKT6ngPcvn0b
      n3/+uZLNLoh01ncgJooidDqds0ugMo6w19hHqeCj1Q7guQLC8eDaNqSM4XneyBsnUqEnAHEc
      Y2NjA7ZtI4oiuK6Lo8M2vnt4H5Gbx8RECZ3DFizbxv72HubW1lCfm0X3fDlRMvCRJHrVUVnr
      dMNBFRcYdD0+3Xo6rZFqHiCXy+HDDz/80VjkQWMbkVfG0lwVDx9+g2LRR5LYcBwHURTzZJm0
      96bnaN9xmydPnmB3dxdLS0uwbRuTs/PIFI+Q9Tz88te/gmslgOPBtSzIRJ7sDwYAQsnyCSml
      VnVU1pJSnu2npktPKmvp2NPph7qp9wjr/s8enf2FjJfFpJcduBEi3fSN1+7uLjY3N5UOcBPp
      qO8rAFeCkin6fjnuV199haOjI4aAxl7PK4BlWSiXy8jn8xfRD9FI9f0vfnp6GhsbG7y8SWOv
      bwAajQYymQy3SKKx1/MWqNls4t1338XOzg7PAWjs9TzDXdfF3bt38eLFCwaAxl7PK4Dv+/jo
      o48A8OvPafz1/RyAT3wyBd/jkNEYADIaA0BGS7n7QIJEJoAQ3aWlAKBoSS/RRUoVgIPGK9y7
      dxdeaRJRECLjSNgZH1YnglepYG25Puw+iYYiVQDiqIPi9DwcGcJyXUQQsCCxubWFtdo17hF2
      zjqq6Hp8OvaUeo+wfizHhecIzFavonkYwHdiCK+I+uISojDs7nnFPcJS1+EeYaOtda49wvop
      ladQKnf3CCtXBu6HSBu8CkRGYwDIaAwAGY0BIKMxAGQ0BoCMxgCQ0RgAMhoDQEZjAMhoDAAZ
      jQEgozEAZLRUq0F/uJa6uxOSBGDhdHUpJ8PoskoVgODwALf+819USy6kW0CntQc740MeBSjM
      zGB1aeEkGVC2ubZudXStxZ4Gq5UqAF6+iHIxi7n5GtbX1zFRmYRAgu1mA5ML9e6mbyf/gIqt
      VVVNTamevtKpjq61dO1poImw48MDFPIFRFKivrIG301geQUsr6wijsKTaRtwIixlHU6EjbbW
      wBNhuUIJ16+X3nAr9wimy4tXgchoDAAZjQEgozEAZDQGgIzGAJDRGAAyGgNARmMAyGgMABmN
      ASCjMQBkNAaAjJZ6IiyKIlhCIAgj2AIQtgPb6u4Zpmr5K9GopZ4I+/fdr1EtZ9FqR7BtCdvx
      EDT3MbVQx/LCPLrzBol2U0U6Tifp2JPKWrr1lCRvfl6mCoCTzcFzgTgGMq4DIRIIAYRhCGHZ
      Z8UTqJniSZJEqzoqa50+GKoeWB2PT8ee3nSfp9skLwxRq9VQnijhKIjg2RLCzSGz9g5iGb+e
      CIOAbdtKGtapjspaSZK8cTrponpSWUvHngAMNhHm5XzM53wAQD6vpB8iLfAqEBmNASCjMQBk
      NAaAjMYAkNEYADIaA0BGYwDIaAwAGY0BIKMxAGQ0pQF4sd3AXmNfZUmioVIagMcbTew22ypL
      Eg3VzwqAqvXsRBftXLOMD7++j9jOImy9gsj4cGIJp1DE6nJ9WP0RDdW5AjA9VcWDR9+gNFGB
      BYnvnz7De7+9gTiOkcjuK4KUElEUDdSUihoq66ispXoPLR2PT8eeBhqJPCOAmas15DMJhFdE
      7VodYdjp7nlldadtZCIhxGCTYeO8XxX3CBt9rYH3CDs1OT2Dyem3/86f/3YPf/yDi+Vrs+dq
      kugiKP8c4LgTQ/IEmS4JfhBGRhtKAKIoUrJhNtGwDSUAf/rrXTzb3BlGaSKlhhKAIJSQPA2g
      S2Bo5wCb2w20j46HVZ5IiaEF4C+fPcTWTnNY5YmUGOpVoJe7TZ4Mk9aGGoBPv3iCdrvNhXOk
      rf8D66efCK2OxlgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='HistArrDelay' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAANCElEQVR4nO3dyXPb1h0H8C8WkgApUtZma3MdSZGdxEmmncZxqviSiQ/+r3rttYfe0h47
      PfTSmaSdzqRpZzqdTJY6m23Flhw7tnZREsV9AfB6kKm4ImURgAjoAd/PKZb1+H6O8BVA8P3w
      FCGEAFFMqaf1QkIIeM0Sx52dcV7G+hnnxWnOp7sd7DgOVFWB4wioqnr4NcdxIMRPX3Pj4DXd
      j6vVajBNM7D5oj6u/TNWFCWQ+c7CuJ4C4NgWPv7k37hx/Rf4+ptvYKkpJPUEBtMGGkLg52++
      DuDgf6Cu95ypQ5ZleRqnaVqg80V9nOM4AOD64LIsC5qmuQ6O1zpt24aqqqcyX0+zK6qGsbEh
      tBo1pIcuICEsQFFRLReRyA0hrDcRmqaFNDNFRU8BEI6F3MAA6raKATOJsZELqDZtDM3NwrKs
      ftd4LNu2Q5uboqGnAKhaAnMvvwwAuPDsa4P9qogoQKd2FygMvAQiv6QOAC+ByC+pA0Dkl9QB
      4CUQ+SVlAD5fXMVuscZLIPJNygB8+3AT+5V62GVQBEgZgDYvH4cTPU/qI6j90T2RV1IHwO1a
      EKKjGACKtd7WAgkBy7Kh6ypsy4HjWFA0HaqiQgjH04q+08BLIPKrpyO3Xi7ii+/u4435aaxs
      VmA1CtASBqqFIs6/NIOZixOHa8mDauJof7tMzSZnfVzQP0M/Y06rxp4CkDTTMBIK0tlBKOsl
      6HoKigI0m02omnZYkBDC02WJ4ziuxh3M5RyO7fd8cRn3fNNTEPP5qdNLCLrN11MAWq0mJicn
      UanWMTw2iLSRgJ5KY/7yFTjPmhPaBXn5dNbtOEVRDm+BBjFfXMZ5bYhpdwK6PZi91gng1Obr
      KQCGmcH0VMbVZEHgm2Dyi3eBKNakDgDvApFfUgeAZwDyiwGgWJM2AL/982e8BCLfpA3AdqHK
      MwD5Jm0AAF4CkX9SB4CXQOSX1AHgGYD8YgAo1qQOAC+ByC+pA8AzAPnV02K4WrmIpR83MJZL
      Il9qwFBb0IwcTF2HrSiYnprod51EfdHbatBMFnB+RKFsw1QVNEQSiVoZX965j4Vbt2Db9uEG
      GV6eFu04jqtx7XXglmUFMl9cxvnpB/DCz7/PS0NMt/l6CkC1XES1WsX42AiKNRum2oRm5nBt
      4VeoFHYxkp0CENwGGe1LH13Xpdh4QpZx3CDjGJnsIN65ft3VZEQykPpNMDe4JL+kDgCfDEd+
      SX0E8QxAfjEAFGvSBWB5dRe3H6wD4CUQ+SfdEbRTrGE1XwLAMwD5J10AnscAkF9SB4CXQOSX
      1EcQzwDkFwNAsSZ1AHgJRH5JfQTxDEB+uVqKt7WxhlLNQlJpQTdzMJNJtKwWxsZG+1XfCzEA
      5JerAOS3trG5vYfzk5PQq9u4vbiE6zdvBtoP4BzZG1iGdfayjGM/wAnGJ86jYguIRhG2kcUr
      r1/F3k4eo4OXAATTD6A+93x3RVGkWGcvyzj2A5xgaHQcb42OH/457J5cXgKRX64CEPYBfxTv
      ApFfUh9BPAOQXwwAxZrUAeAlEPkl9RHEJ8ORX1IHgMgvqQPgdY9ZojapA2Af+VSYyC2pA0Dk
      l7QBKNea+N1fvgq7DJKctAEAANvh5wDkj9QBIPLL1Vqg9ievQggoinLm1gYRueUqAHduf4n1
      vTKGcyYSRgZ2tY7chXG8PHOxX/UR9ZWrANiqhoGUASOdgwob+d1djM3MhtYQE9SGHHEZx4aY
      E8zNvIS9UgPppIBm5jAzOw/Lah1+IMWGGLnHsSHmBNlzw8ieO/pVw1URRGcJ7wJRrDEAFGsM
      AMUaA0CxxgBQrDEAFGsMAMUaA0CxxgBQrDEAFGsMAMWapwAIIfhUNooE1xtkfL/8GMNZA5ox
      gCQUKIaJ2UvT/aqPqK9cBWB4+BxGR4YBKFBtC98vLuHa++FtkMF+gNMdx36AEzRqDbw0O4+d
      tR+gmkN4970pNBoVaOcyANgPIPs49gM8s7y8DMuyMD8//39PX8sMDgEA0jPzbmsmOpO6Rt22
      baytreHBgwdB10MUqK4B2NrawqNHj3D58uWg6yEKVMclkGVZmJiYQK1WC6MeokB1nAHq9Tqe
      PHmCer3ODSgo8jqO8IGBAaiqivX1dT59mSKvIwCWZcGyLFy5csXTLSoimXQc4fl8HtVqFeVy
      GbZtcxMKirSOAFy4cAETExOYm5vjewCKvI4jXFEU2LaN1dXVMOohClTXX/GpVAr5fJ4rPiny
      Oi6B9vf3sbKygmazycefU+R1nAEymQzm5uYwODh4Js8Af/2UyzPo9HScAXRdRy6XO9wE43nb
      6yvYrdnQWmVoRg6mrsMCMD01EVS9KFabgc1F0ddxBhBCYGdnB0tLSx3rvLe3duHUy6i0FNTL
      +1i+twhHD+/p0A/X9vDdw83Q5if5dQSgVCphcXGxa9PB9MVJaMk0RnMGhs5P4M23ryGteWuG
      OA1bexU82SqGNj/Jr+MSKJfLYWFhAWtrax0fguWGR5EbHg2sOKJ+63obtFarwbbtM/kmmOg0
      dQ1AsVhEqVTy3OtJJIuuARBCsB+AYqFrAAzDQDKZ5FogiryOI9y2bdy9exfJZJLvASjyOu4C
      aZqG6elp6LrOMwBFXtcjPJ1Oo1AoBF0LUeCOvQvU7gwjirKOAFSrVczMzGBkZITdYBR5He8B
      Go0GlpaW0Gw2+SaYIq8jAENDQ7hx4wY0TeMZgCKv62MfTNMMug6iULh67slufgt7lQZSaEE3
      czASCVi2hdHRkX7VR9RXrgKwt7uLpi3QgAqtsonbi8u4dvP9QPcHwJH3JUK4f8a8LM/r5/4A
      x48LZX+AgYEsHq9swEwICGMAl197FYWdHYwNXgIQzP4AONKlpiiq6zlleV4/9wforu/7Axzn
      /MQkzk9MHv6ZTfMkO1cB4AFPUcPFPhRrDADFGgNAscYAUKxJH4C/f7GMfKEadhkkKekD8OPG
      PmrNVthlkKSkDwCRHwwAxRoDQLHGAFCsMQAUay6X4gnsF0pwrBo0I4ukrsG2LWQymf5UR9Rn
      rgKwtfoUS0+2MZg1oGIL60/W8Mpbb8E0zcM12l4213Ycp/dxXdaB27aL8W7ni9k4RVFcr7Vv
      j/Myn9c6u23g4mU+VwEo1+to1iuoqk0kjQyGhkdQLpWhjA1DVVUIITw9TMvVuC7/aFVVXc0b
      SJ0SjgMOVvy6PbBkrtNVAGbnLmNmdh62bUFRNajPfls8X4jXJdN+llorivvxQdcpw7j2mDDm
      9DLuNOZz3Y6jKAp0PXHsCxLJhHeBKNYYAIo1BoBijQGgWGMAKNYYAIo1BoBiLRIB+Md/H4Vd
      AkkqEgHYLlTCLoEkJVUAvn24GXYJFDFSBeDe4+2wS6CIcbUW6OgyWa4DItm5CsD25joeP9lA
      xlCgGQNIQoGSMjBzabpf9RH1lasAZDMZlCpFZLKTUOwWFu8t4e2bNwPbIMNxnK4NMW7nlWXD
      Cm6Qcfy4UDbI2C8VMTUxDTPpQDNHsPDeJBq1MrTBg5bIfm+Qoapq14aYgyXavc8ry4YV3CCj
      u9A2yBifvIjxyZO/j0gWUt0FIjptDADFWiQCYDsClu3tjRjFWyQC8OndFXz85Q9hl0ESikQA
      iLxiACjWGACKNQaAYo0BoFhjACjWGACKNQaAYs3d/gBrK9jcLcNMONDMLNJ6AhaAqcnxPpXX
      uz99cgfZdBLvvvGzsEshibgKQDptorW9C10z4FRK+PzOfSzcuhV6PwAA7JXqKFYaPb+ODOvz
      2Q9w/LhQ+gHW1zeQHcjBaRShGjn88p3rKO3tYCR70BEWVj/AT3/fW1+ALOvz2Q/QXWj9APOv
      XnU1IdFZxzfBFGsMAMVapALw0adLYZdAkolUAEq1ZtglkGQiFQAit6QJQKNlocW2Rzpl0gTg
      u4dbeLxRCLsMihhpAtCLQqmO3390O+wySCKRCoAjBPYrjbDLIIlEKgBEbkUuABs7Zazmi2GX
      QZKIXADuP93Bvcf5sMsgSbhaDOfYFhpNG3arDjVpQFdVCOEglUr1qz6ivnIVgGJhG6sbFdit
      MlRNw95mHpdeu4rp8VEIISCE8LQ2vJdxjmj3Apy8Dvzuoy0sXJ2CmUp4ni+O4xzHgaIorse2
      f/Zu1+j7qRNwv0NRt/lcXQIlkgZqlcpBA4wQSCSTaLZagWyVpEA5/K+T/POrxyhWuSwiqk7z
      eHN1BtD1FOZfmUVCV6DpKWiqCvHst0a7KLfNFMBBok8apyjKC5thjlIV5djX7GW+OI5rczvW
      OXIMuBnnpU4hhKeGmG7zuZo9ZaYxmMsinR5AKpmArmtIJLtfZoTtN3/8T9glkAQidxeorcxL
      IOpBZAOwvV/BBx9yWQS9mDQB2K/UXX2/EMCDpzuoNVp9qoiiQJoA/O2zZddj7j/d4VmAXkia
      AHj19fIml0bQsSIfgPx+Fb/+w79QZrskdRH5AADAdqGKDz68jXrT/VPIKNr+B6/Gd04P2ybS
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='HistArrivalDelay' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAANE0lEQVR4nO3d23MT5xkG8GcPsrSyTpZlW7KNZBtjoJhCIASXENKmnc5Ae9Ob9prpZacz
      nenkP+if0E563cu207STznRaMpM2DTilSUjAARwbDD7JyNbJto6r3e2FgUIkEi1YkqXv+V0w
      jPyt5vV4H+3he/WtZFmWBSJBya0ugKiVGAASGgPQIguz13FnKQHLNGFaFlLJB0jndViWBdM0
      Udxax8yNT/Hnt9/BRnYbhmGikFmBaRqwLAuWZWHxzm38491/olQxYVkWDMN8/DPz4fua5s5r
      VJvEa4DW+NMffw/Z4cbm+goUdwD7fG4sWS6EPSrSS3MowYmAz43hA6/gs/ffwczSGi7+5Dz+
      9d4VBCKjkGUFJUnC/oEAtvNFbGYySOdLCHh7MRD0IplaBxQFszdv4Kc/fxN9Pq3Vv/KepLa6
      ACFZBoI9vTBVJybGJwAA/S4TIb2CxQc5eAJ9CDgd8Hp8mLl2FYdPvAzPYALe7m6EBqM4MDmJ
      q5en8fKxCcwuJTAxfhhHD8n44OoN9PicSCS3IMFCX08fvnnkKLbyZQbgGXblCMCDSHMVttLI
      5IHIQM8zx6RTafQEn/1z2rErATBNE4ZhQJZ5SUHtZVdOgWRZhmVZUBRlN96OqGn4kU1CYwBI
      aAwACY0BIKExACQ0BoCExgCQ0Ha9FeK9TxZwN56ua+zx8TBOHhzc7RKI6mYrANnUBtK5MjTF
      gOr2wak6YBg6/H7/4zEffRHHB9cX63o/V5eDAaCWshWAe3cXsJ7dRiQSgZzO4v7cPbx07hw8
      hvG47dZOZ4VlmahUKraLJtottgIgqw64nW4Ucxk4NC+GYzFk02kMBH0AAEVRIElS3e8nSTJU
      lQ2p1Dq29r7JY8cACwAsQJJs7exEe5GtAEiSBEjAw3+I2h5vg5LQGAASGgNAQmMASGgMAAmN
      ASChMQAkNFvzAIm1VdxfSSDgdcEbCMLSDZiQMDQUblR9RA1lKwChvhASySysio7NTBq3P72J
      sxfOw2AvELUpWwHIZTPYFxtFMr4IQ1Zx6swUttJJBD1DANgLRO3H1t7nDfYDAPwHJhpSDFGz
      8SKYhMYAkNAYABIaA0BCYwBIaAwACY0BIKE9VwDszvgS7VW2e4Fmbs8j6HVB1TxAqQJ3MIix
      2HCj6iNqKFsBCPg9GBwcglnRIVkV3F9cwvFojL1A1LZsBcAwgLGxUSTXFqG6AxiOjkLXy48f
      jcReIGo3tvY+zbOzAFZkeOSJV7t3sRyi5uJdIBIaA0BCYwBIaAwACY0BIKExACQ0BoCEZmse
      QC8VkUhvwt0lw5Id6NY0mIYBza01qj6ihrIVgBvXrsHhC2El+wD7xvbj0w+v4uBLJxBxOWGa
      5s4gW60QFgzDsFUw0W6yNxOsuZFKbyAciWBlcRlerw/5fAGSFIQsy5BlGXYeniFJeLgNUWvY
      CsDBySMo6RXIEhCNjkCRJViW9bj/5/9PkKkXH7NErWXvIXmKCk1h8xp1Dp5/kNAYABIaA0BC
      YwBIaAwACY0BIKExACQ0Wzf1y8U8VtfT8LoUqJoXXYoK06ig28PvBVN7shWA659cg6snhFzW
      gIR1rNxbweTp03BpLi6LQm3J3hNivF6sJzfgcMhwurrRGwphc3MT4VAAwE5fj91lUR4tqULU
      CrYCMDE5if2GBUna2Xkf7etP9QLZxF4gaiVbAdhZyKpRpRA1H+8CkdAYABIaA0BCYwBIaAwA
      CY0BIKExACQ0W3f1H6ytYLtkQq4UoXkDUCFBNwxEIgONqo+ooWwFoJgvIJ8rQ0EZJiR8/vF1
      vPaDC3xEErUtWwFwujTo2QLcHjf0ionjp15Gen0dPSP7APARSdR+bO194cEhhAeHGlULUdPx
      IpiExgCQ0BgAEhoDQEJjAEhoDAAJjQEgodUMwP3793Hp0qVnPr3F7owv0V5VcyIsmUxC06qf
      +3Vnbham6kIxuwFV80A1ALXbg9EYJ8eoPdUMQDqdxsLCAqampp563ef14u69RXh9PZCNCr64
      dQevfO+77AWitlUVAMuy0N/fD4fDUWO4hJ7QADTVgKoF8eobwyiX8lD8OyvDsReI2k3V3mea
      Jubn59HT01O1aFVfOIK+ppVG1HhVF8GKouDo0aNYXV3l6Ql1vJp3gZLJJBRF4bKF1PFqBiCb
      zSIWi3HZQup4VQHY2tpCX18f8vk87/VTx6sKgGEYmJubg9Pp5BGAOl5VALxeL0ZGRrC8vMwj
      AHW8qgBsb29jfn4e0WiURwDqeFUB8Pv9OHnyJObm5rC4uPiln1ooFUvI53LIF4qoVAzoZb1J
      pRLtvprTsNlsFqOjo+jp6Xnq9dSDOGbm4nBgG9HxCdy7OYfhgwcRHeyHZVkwTROwddr0cBui
      Fql5G/TRhbDb7X7q9UQqBUPPY3A4htXFJQCA+SKdobzEoBarOgJkMhkYhoHx8fGqibBDhyex
      f7+OfH4LfQNhOFQVpmFAlmVYlgVZlgE71w2StLMNUYtUBSAQCMDlciEej8M0zaoQOLoc8HcF
      n3iBzWzUvqo+fh+dzpimyU9n6nhVH9+bm5vIZDLPaIdurI9mV5HdLtY19lAshKGQr8EVUaer
      ef5SKBTgcrlgWVZT5wL+8N5N3F7cqGvsz350igGgF1ZzHkBRFHg8Hk6EUcereZLf1dXV7DqI
      WqIqAKVSCX6/H6lUqhX1EDVVVQB0XcfW1hbK5XIr6iFqqqqLYI/HgzNnzqBQKFQNruhF3Ly1
      AJdageL2wSUrMGUF+4YjTSmWaLfVvAt0+fJl3L17FxcvXnxq1YaZ69eRzVUQCoWAQg4f35jF
      2Qvnd3FZlPq3NU0uqUIvruY8QLlcRiAQqJoFPnzkKB4kkijlMlDdfpx+7QxymRSCnkEAu7Es
      Sv3byjKXVKEXV/MUqLu7G+VyGYZhPLWTOV0aotFhAMPNrJGoYaoCIMsypqamkMvl+AlLHa/m
      PMD09DSmp6d5jk0dr2YAAoEAdF3nukDU8WoGIJ1OY21t7ZnLoxN1iqoAPPoOwKFDh1pRD1FT
      1bzKzefzkGWZp0DU8aqOALIsQ5IkeL3eVtRD1FQ1rwEikQi2tra4MBZ1vJqnQMVi8fEyJ09+
      LTIRX8HKWgqaS0agtw96vghLURHdN9i0gol2U1UA1tbWEIlE4HA4qtoavB4Pkpm7GBkMIZXc
      wPyNWZw9z14gal9VAQiFQrhy5QqcTmfVl+Iz2SzC/X2QZBkupxPfev01FDbTCHp3ukHZC0Tt
      pmoPUlUV586dqzk4MhxFhG1A1EG47gkJjQEgoTEAJDQGgITGAJDQGAASGgNAQrM1k/RolvfR
      mqFcOpHana0AJOIrmLl1B35vFxyaB0auBH84jP0jnB2j9mQrAJqmwdGlwtUdgGxVsJ5MYmBs
      jL1A1LZsBUDXdcRGRuF2WFDdfoyMHYBRKT/+4gx7gajd2NqDevvD6K161bVrxRA1G+8CkdAY
      ABIaA0BCYwBIaAwACY0BIKF1zI30t9+/hVxRr2vsGydGMRjiukdkMwDb2RSSm0W4VAtQXfB2
      u2EYlT2xiNZfp+ewkc3XNfYbI30MAAGwewSQFDyIxyGjjKHYCP797oc49upZuPdEK0T92xqm
      wTYKAmAzAHduzcDlG4DHYWF1eRXhyCCymQzCvX4ArW6FqH9bRVbYRkEAbAbg2OlXAex8co+C
      7dDU/p7rY1CSePOIOgP3ZBIaA0BCYwBIaAwACY0BIKExACQ0BoCEZm9ZlNVlJNI5uBwGHJof
      msOBimlhcHCgUfURNZStAHR3ayivJ6HIbpjbWXx2YxZnL+yVRySxF4jssxWAleVVeL0BGPkM
      ZLcPJ6dOYTO5gWBsZ2Es9gJRu7G1F0wcOfrwf7EGlELUfLwIJqExACQ0BoCExitBAL/9y0d1
      j/3xd44g6NMaWA01EwMA4G//ma977IWpAwxAB+EpEAmNASCh2Q6AnZleor3O1jVAKrGMRLqC
      /HYC4eEoNhMpdPl8GIvxEUnUnmwFINg3gFQmjv7eEBLxOOILKzjx7deF6gUyDPYRdRJ7R4CN
      JHSzBNWSMRAZwtjoOMp6GYqys8qaCL1AisI+ok5i8wgQRrAv3KhaiJqOd4FIaAwACY0BIKEx
      ACQ03s54AanNAt5861Ld43/9i/PQnI4GVkR2MQAvwLSsuh/KAQCcRN97GADqWLlCGZdnlr5y
      jO0APDnTy+cD0F6W3iriN2//9yvH2O4FWkuWUc5vQNU8QKkCdzDIXiBqW8/RC7QMaD5IVgX3
      F5dwPBoTthfIMIzn2JZHzWYxzK//+9juBTIsAwGfCw53AMPRUeh6GYqiABCvF+jR7/0821Lj
      KfLX/32eoxfoy69223kLemhuOYVf/e79usa6nSre+uUPG1yRmPhx1CKGYSKzXaxrbLnCuYNG
      4UwwCY0BIKExACQ0XgO0ob9fvYNrc/G6xp6YiOD7p/Y3uKL2xQC0oYV4GtOfL9c1tsfLRby+
      yv8AIVEbx1GDnyEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Historia 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TailNum-Flights$MeanArrivalDelay' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
